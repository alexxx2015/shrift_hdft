<?xml version="1.0"?>
<!DOCTYPE BlockLangDef SYSTEM "lang_def.dtd">

<BlockLangDef>

	<BlockConnectorShapes>
		<BlockConnectorShape shape-type="number"
			shape-number="1"></BlockConnectorShape>
		<BlockConnectorShape shape-type="number-list"
			shape-number="2"></BlockConnectorShape>
		<BlockConnectorShape shape-type="number-inv"
			shape-number="3"></BlockConnectorShape>
		<BlockConnectorShape shape-type="boolean"
			shape-number="4"></BlockConnectorShape>
		<BlockConnectorShape shape-type="boolean-list"
			shape-number="5"></BlockConnectorShape>
		<BlockConnectorShape shape-type="boolean-inv"
			shape-number="6"></BlockConnectorShape>
		<BlockConnectorShape shape-type="string"
			shape-number="7"></BlockConnectorShape>
		<BlockConnectorShape shape-type="string-list"
			shape-number="8"></BlockConnectorShape>
		<BlockConnectorShape shape-type="string-inv"
			shape-number="9"></BlockConnectorShape>
		<BlockConnectorShape shape-type="poly"
			shape-number="10"></BlockConnectorShape>
		<BlockConnectorShape shape-type="poly-list"
			shape-number="11"></BlockConnectorShape>
		<BlockConnectorShape shape-type="poly-inv"
			shape-number="12"></BlockConnectorShape>
		<BlockConnectorShape shape-type="proc-param"
			shape-number="13"></BlockConnectorShape>
		<BlockConnectorShape shape-type="cmd"
			shape-number="14"></BlockConnectorShape>
	</BlockConnectorShapes>

	<BlockGenuses>

		<BlockGenus name="seconds" kind="data" initlabel="seconds"
			color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="minutes" kind="data" initlabel="minutes"
			color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="hours" kind="data" initlabel="hours"
			color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="days" kind="data" initlabel="days" color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="weeks" kind="data" initlabel="weeks"
			color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="months" kind="data" initlabel="months"
			color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="number" kind="data" initlabel="1"
			editable-label="yes" is-label-value="yes" color="255 105 180">
			<description>
				<text>
					Reports the number shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="Timesteps" kind="function" initlabel="Time steps"
			color="255 192 203">
			<description>
				<text>
					Reports the timestep shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number">
				</BlockConnector>
				<BlockConnector connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>
				</BlockConnector>
				<BlockConnector connector-kind="socket"
					connector-label="unit" connector-type="string">
					<DefaultArg genus-name="seconds" label="seconds"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="data" kind="data" initlabel="data"
			editable-label="yes" is-label-value="yes" color="200 200 200">
			<description>
				<text>
					Reports the data shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="container" kind="data" initlabel="container"
			editable-label="yes" is-label-value="yes" color="200 200 200">
			<description>
				<text>
					Reports the container shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="subject" kind="data" initlabel="recipient"
			editable-label="yes" is-label-value="yes" color="255 0 0">
			<description>
				<text>
					Reports the subject shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="desiredEv" kind="data" initlabel="desired"
			editable-label="no" is-label-value="yes" color="165 42 42">
			<description>
				<text>
					Reports the desired event shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="actualEv" kind="data" initlabel="actual"
			editable-label="no" is-label-value="yes" color="165 42 42">
			<description>
				<text>
					Reports the actual event shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="actionType" kind="data" initlabel="desired"
			editable-label="no" is-label-value="yes" color="200 200 200">
			<description>
				<text>
					Reports the desired or actual event shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>



		<!-- logical constants -->

		<BlockGenus name="true" kind="data" initlabel="true" color="255 255 0">
			<description>
				<text>
					Reports the boolean true.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="true"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="false" kind="data" initlabel="false"
			color="255 255 0">
			<description>
				<text>
					Reports the boolean false.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="false"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>


		<!-- LOGIC -->

		<BlockGenus name="implies" kind="function" type="boolean"
			initlabel="implies" color="0 236 0">
			<description>
				<text>
					If
					<arg n="1" />
					is true, the agent will run the blocks attached to
					<arg n="2" />
				</text>
				<arg-description n="1" name="test"> The condition being
					tested.</arg-description>
				<arg-description n="2" name="then">The set of instructions
					that is executed when the condition is true.</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
				<BlockConnector label="consequence" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="implies"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>


		<BlockGenus name="or" kind="function" initlabel="or" color="0 236 0">
			<description>
				<text>
					Computes true if one or both of the two conditions are true.
				</text>
				<arg-description n="2" doc-name="condition 1">
					The first condition
					that must be true.
				</arg-description>
				<arg-description n="3" doc-name="condition 2">
					The second condition
					that must be true.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector connector-kind="socket"
					connector-type="boolean"></BlockConnector>
				<BlockConnector connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="or"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="and" kind="function" initlabel="and"
			color="0 236 0">
			<description>
				<text>
					Computes true if both conditions are true.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector connector-kind="socket"
					connector-type="boolean"></BlockConnector>
				<BlockConnector connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="and"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="not" kind="function" initlabel="not"
			color="0 236 0">
			<description>
				<text>
					Computes the opposite of condition.
				</text>
				<arg-description n="1" doc-name="boolean">
					The boolean (<em>true</em>
					or
					<em>false</em>)
					that should be inverted.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="not"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>


		<!-- temporal LOGIC -->

		<BlockGenus name="always" kind="function" initlabel="always"
			color="0 255 225">
			<description>
				<text>
					The condition is always true.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="after" kind="function" initlabel="after"
			color="0 255 225">
			<description>
				<text>
					the condition is true after bound timesteps.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="bound" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="Timesteps" label="Time steps"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="within" kind="function" initlabel="within"
			color="0 255 225">
			<description>
				<text>
					the condition is true at least once in bound timesteps.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="bound" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="Timesteps" label="Time steps"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="during" kind="function" initlabel="during"
			color="0 255 225">
			<description>
				<text>
					the condition is true at every point in bound timesteps.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="bound" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="Timesteps" label="Time steps"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="until" kind="function" initlabel="until"
			color="0 255 225">
			<description>
				<text>
					start must be true until
					condition becomes true or
					condition never becomes true
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="start" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="repUntil" kind="function" initlabel="repeat until"
			color="0 255 225">
			<description>
				<text>
					start must be true max. limit times until
					condition becomes true or
					condition never becomes true
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="limit" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="start" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="repLim" kind="function" initlabel="repeat limit"
			color="0 255 225">
			<description>
				<text>
					condition must be true
					at least "min. repeat" times
					and at most "max. repeat" times
					times in bound timesteps.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="bound" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="Timesteps" label="Time steps"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="min. repeat" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="max. repeat" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="repMax" kind="function" initlabel="repeat max"
			color="0 255 225">
			<description>
				<text>
					condition may be true
					max. limit times.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="limit" connector-kind="socket"
					connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="condition" connector-kind="socket"
					connector-type="boolean"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<BlockGenus name="Any" kind="data" initlabel="Any" color="177 10 255">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<!--param -->


		<BlockGenus name="param" kind="function" initlabel="parameter"
			color="177 10 255">
			<description>
				<text>
					Reports the parameter with name and value pair.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string">
				</BlockConnector>
				<BlockConnector label="name" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="paramName" label="param name"></DefaultArg>
				</BlockConnector>
				<BlockConnector connector-kind="socket" label="value"
					connector-type="string">
					<DefaultArg genus-name="paramValue" label="param value"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<BlockGenus name="paramName" kind="data" initlabel="param name"
			editable-label="no" is-label-value="yes" color="177 10 255">
			<description>
				<text>
					Reports the param name shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<BlockGenus name="paramValue" kind="data" initlabel="param value"
			editable-label="no" is-label-value="yes" color="177 10 255">
			<description>
				<text>
					Reports the param value shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>



		<!-- Permit operators -->


		<BlockGenus name="permitOnlyEvname" kind="function"
			initlabel="permit only certain event names" color="27 180 225"
			sockets-expandable="yes">
			<description>
				<text>
					permit only certain event names
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="event name" connector-kind="socket"
					connector-type="string-list">
					<DefaultArg genus-name="actionList" label="actions"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="parameter" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="param" label="param"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>



		<BlockGenus name="permitOnlyParam" kind="function"
			initlabel="permit only certain parameters in events" color="27 180 225"
			sockets-expandable="yes">
			<description>
				<text>
					permit only certain parameters in events
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="param values" connector-kind="socket"
					connector-type="string-list">
					<DefaultArg genus-name="paramValue" label="param values"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="param name" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="paramName" label="param name"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="event name" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="actionName" label="action name"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="parameter" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="param" label="param"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<!-- State-based operators -->
		<BlockGenus name="isOnlyIn" kind="function" initlabel="is only in"
			color="15 20 220">
			<description>
				<text>
					data is only in the containers
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="data" connector-kind="socket"
					connector-type="string">
				</BlockConnector>
				<BlockConnector label="containers" connector-kind="socket"
					connector-type="string-list">
					<DefaultArg genus-name="container"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="isNotIn" kind="function" initlabel="is not in"
			color="15 20 220">
			<description>
				<text>
					data is not in containers
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="data" connector-kind="socket"
					connector-type="string">
				</BlockConnector>
				<BlockConnector label="containers" connector-kind="socket"
					connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="isCombinedWith" kind="function"
			initlabel="is combined with" color="15 20 220">
			<description>
				<text>
					data is combined with other data
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="data" connector-kind="socket"
					connector-type="string">
				</BlockConnector>
				<BlockConnector label="data" connector-kind="socket"
					connector-type="string"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<!-- lists needed for policies -->
		<BlockGenus name="actionList" kind="data" initlabel="event list"
			editable-label="no" is-label-value="yes" color="255 215 0">
			<description>
				<text>
					Reports the event list shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string-list"
					position-type="mirror">
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>



		<!-- Actions defined in the system model -->

		<BlockGenus name="action" kind="function" initlabel="action"
			color="255 165 0">
			<description>
				<text>
					Reports the action shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean">
				</BlockConnector>
				<BlockConnector connector-kind="socket" label="name"
					connector-type="string">
					<DefaultArg genus-name="actionName" label="name"></DefaultArg>
				</BlockConnector>
				<BlockConnector connector-kind="socket" label="type"
					connector-type="string">
					<DefaultArg genus-name="desiredEv" label="desired"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<BlockGenus name="actionName" kind="data" initlabel="name"
			editable-label="no" is-label-value="yes" color="255 165 0">
			<description>
				<text>
					Reports the event name shown.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror">
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<!-- Enforcement actions -->

		<BlockGenus name="Allow" kind="data" initlabel="Allow"
			color="200 200 200">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="poly" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="Inhibit" kind="data" initlabel="Inhibit"
			color="200 200 200">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="poly" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="ModifyAttribute" kind="command" type="boolean"
			initlabel="Modify attribute" color="200 200 200">
			<BlockConnectors>
				<BlockConnector label="name" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="string" label="name"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="New value" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="string" label="value"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="ExecuteAction" kind="command" type="boolean"
			initlabel="Execute" color="200 200 200">
			<BlockConnectors>
				<BlockConnector label="Action" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="ActionPattern" label="Action" />
				</BlockConnector>
				<BlockConnector label="Target" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="EntityPattern" label="Entity" />
				</BlockConnector>
				<BlockConnector label="Parameters" connector-kind="socket"
					connector-type="cmd">
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<!-- -->


		<BlockGenus name="Policy" kind="data" initlabel="Policy"
			color="139 0 0" is-starter="yes">
			<description>
				<text>
					Policy as obligation for the subject.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="Subject" connector-kind="socket"
					connector-type="string">
					<DefaultArg genus-name="subject" label="recipient"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="Obligation" connector-kind="socket"
					connector-type="boolean">
					<DefaultArg genus-name="true" label="true"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<!-- to be removed later -->
		<!-- starts now -->


		<!-- Action types -->


		<!-- end now -->



	</BlockGenuses>

	<BlockFamilies>
		<BlockFamily>
			<FamilyMember>desiredEv</FamilyMember>
			<FamilyMember>actualEv</FamilyMember>
		</BlockFamily>


		<!--<BlockFamily> <FamilyMember>AnyActionType</FamilyMember> <FamilyMember>OpenFileType</FamilyMember> 
			<FamilyMember>DeleteFileType</FamilyMember> </BlockFamily> <BlockFamily> 
			<FamilyMember>AnyAction</FamilyMember> </BlockFamily> <BlockFamily> <FamilyMember>AnyInteraction</FamilyMember> 
			</BlockFamily> <BlockFamily> <FamilyMember>AnyInteractionType</FamilyMember> 
			</BlockFamily> <BlockFamily> <FamilyMember>AnyBehavior</FamilyMember> </BlockFamily> 
			<BlockFamily> <FamilyMember>AnyBehaviorType</FamilyMember> </BlockFamily> -->

		<BlockFamily>
			<FamilyMember>seconds</FamilyMember>
			<FamilyMember>minutes</FamilyMember>
			<FamilyMember>hours</FamilyMember>
			<FamilyMember>days</FamilyMember>
			<FamilyMember>weeks</FamilyMember>
			<FamilyMember>months</FamilyMember>
		</BlockFamily>

		<BlockFamily>
			<FamilyMember>and</FamilyMember>
			<FamilyMember>or</FamilyMember>
		</BlockFamily>

		<BlockFamily>
			<FamilyMember>true</FamilyMember>
			<FamilyMember>false</FamilyMember>
		</BlockFamily>

		<!--BlockFamily> <FamilyMember>EntityVariable</FamilyMember> <FamilyMember>EntityInstantiationVariable</FamilyMember> 
			<FamilyMember>EntityTypeVariable</FamilyMember> <FamilyMember>BehaviorVariable</FamilyMember> 
			<FamilyMember>BehaviorInstantiationVariable</FamilyMember> <FamilyMember>BehaviorTypeVariable</FamilyMember> 
			</BlockFamily -->

	</BlockFamilies>

	<BlockDrawerSets>
		<BlockDrawerSet name="factory" type="stack" location="southwest"
			window-per-drawer="no" drawer-draggable="no">

			<!-- <BlockDrawer name="Mechanism instantiation" type="factory" button-color="200 
				200 200"> <BlockGenusMember>TestBlock</BlockGenusMember> </BlockDrawer> <BlockDrawer 
				name="Mechanism templates" type="factory" button-color="200 200 200"> <BlockGenusMember>PreventiveMechanism</BlockGenusMember> 
				</BlockDrawer> -->

			<BlockDrawer name="New policy" type="factory" is-open="yes"
				button-color="173 0 0">
				<BlockGenusMember>Policy</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="Subject" type="factory" button-color="247 0 0">
				<BlockGenusMember>subject</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="Actions" type="factory" button-color="255 173 0">
				<BlockGenusMember>action</BlockGenusMember>
			</BlockDrawer>

			<!-- <BlockDrawer name="Variables" type="factory" button-color="247 0 
				0"> <BlockGenusMember>EntityVariable</BlockGenusMember> <BlockGenusMember>EntityInstantiationVariable</BlockGenusMember> 
				<BlockGenusMember>EntityTypeVariable</BlockGenusMember> <BlockGenusMember>BehaviorVariable</BlockGenusMember> 
				<BlockGenusMember>BehaviorInstantiationVariable</BlockGenusMember> <BlockGenusMember>BehaviorTypeVariable</BlockGenusMember> 
				</BlockDrawer> <BlockDrawer name="Enforcement actions" type="factory" button-color="200 
				200 200"> <BlockGenusMember>Allow</BlockGenusMember> <BlockGenusMember>Inhibit</BlockGenusMember> 
				<BlockGenusMember>Timesteps</BlockGenusMember> <BlockGenusMember>ModifyAttribute</BlockGenusMember> 
				<BlockGenusMember>ExecuteAction</BlockGenusMember> </BlockDrawer> <BlockDrawer 
				name="Events" type="factory" button-color="200 200 200"> <BlockGenusMember>ActionEventPattern</BlockGenusMember> 
				<BlockGenusMember>InteractionEventPattern</BlockGenusMember> <BlockGenusMember>ActionPattern</BlockGenusMember> 
				<BlockGenusMember>InteractionPattern</BlockGenusMember> <BlockGenusMember>BehaviorPattern</BlockGenusMember> 
				<BlockGenusMember>EntityPattern</BlockGenusMember> <BlockGenusMember>AttributePattern</BlockGenusMember> 
				</BlockDrawer> <BlockDrawer name="Activities" type="factory" button-color="200 
				200 200"> <BlockGenusMember>AnyAction</BlockGenusMember> <BlockGenusMember>AnyActionType</BlockGenusMember> 
				</BlockDrawer> <BlockGenusMember>DetectiveMechanism</BlockGenusMember> <BlockDrawer 
				name="Data attributes" type="factory" button-color="200 200 200"> </BlockDrawer> -->

			<BlockDrawer name="Logical constants" type="factory"
				button-color="255 235 0">
				<BlockGenusMember>true</BlockGenusMember>
				<BlockGenusMember>false</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="Propositional logic" type="factory"
				button-color="120 255 0">
				<BlockGenusMember>not</BlockGenusMember>
				<BlockGenusMember>and</BlockGenusMember>
				<BlockGenusMember>or</BlockGenusMember>
				<BlockGenusMember>implies</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="Temporal logic" type="factory"
				button-color="0 255 254">
				<BlockGenusMember>always</BlockGenusMember>
				<BlockGenusMember>after</BlockGenusMember>
				<BlockGenusMember>within</BlockGenusMember>
				<BlockGenusMember>during</BlockGenusMember>
				<BlockGenusMember>until</BlockGenusMember>
				<BlockGenusMember>repUntil</BlockGenusMember>
				<BlockGenusMember>repMax</BlockGenusMember>
				<BlockGenusMember>repLim</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="Permit operators" type="factory"
				button-color="45 201 255">
				<BlockGenusMember>permitOnlyEvname</BlockGenusMember>
				<BlockGenusMember>permitOnlyParam</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="State-based operators" type="factory"
				button-color="102 129 255">
				<BlockGenusMember>isOnlyIn</BlockGenusMember>
				<BlockGenusMember>isNotIn</BlockGenusMember>
				<BlockGenusMember>isCombinedWith</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer name="Parameters" type="factory"
				button-color="177 10 255">
				<BlockGenusMember>param</BlockGenusMember>
			</BlockDrawer>



		</BlockDrawerSet>
	</BlockDrawerSets>

	<Pages drawer-with-page="yes">

		<Page page-name="Usage Control Policy" page-width="600">
		</Page>
		<!-- <Page page-name="Structural Snapshots" page-width="400"></Page> <Page 
			page-name="Allowed Instantiations" page-width="400"></Page> <Page page-name="Entity 
			Types" page-width="400"></Page> <Page page-name="Behavior Types" page-width="400"></Page> 
			<Page page-name="Activity Types" page-width="400"></Page> <Page page-name="Everyone" 
			page-width="400"></Page> <Page page-name="Setup" page-width="400"></Page> 
			<Page page-name="Runtime" page-width="400"></Page> -->
	</Pages>


	<TrashCan>
		<OpenTrashImage>/support/images/trash_open.png</OpenTrashImage>
		<ClosedTrashImage>/support/images/trash.png</ClosedTrashImage>
	</TrashCan>

</BlockLangDef>

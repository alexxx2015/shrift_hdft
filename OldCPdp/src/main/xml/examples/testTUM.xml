<?xml version='1.0' standalone='yes' ?>
<policySet xmlns="http://www.iese.fhg.de/pef/1.0/enforcementLanguage" 
           xmlns:tns="http://www.iese.fhg.de/pef/1.0/enforcementLanguage"
           xmlns:a="http://www.iese.fhg.de/pef/1.0/action" 
           xmlns:e="http://www.iese.fhg.de/pef/1.0/event" 
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <actionDescriptions>
    <actionDescription name="event.homeapp.controller.backend" />
  </actionDescriptions>

  <preventiveMechanism name="testReplim">
    <description>...</description>
    <timestep amount="3" unit="SECONDS" />
    <trigger action="testEvent" isTry="true">
<!--      <paramMatch name="val1" value="value1" type="dataUsage" />
      <paramMatch name="val2" value="value2" type="dataUsage" />-->
    </trigger>
    <condition>
    	<not><stateBasedFormula operator="isNotIn" param1="src_java.io.FileInputStream.read()I" param2="val2" param3="val3" /></not>
      <!-- operator isNotIn and operator isOnlyIn -> par1=data par2=string -->
      <!-- operator isCombinedWith -> par1=data par2=data -->
      <!-- operator atMostInSet and atMostInEach -> par1=data par2=string par3=int -->
      

     <eval type="XPATH"> an arbitrary xpath formula </eval>
     <eval type="MATH"> 3+2=5 </eval>

      <!-- <repLim amount="14" unit="SECONDS" lowerLimit="1" upperLimit="2">
        <eventMatch action="action1" isTry="true">
          <paramMatch name="val1" value="value1" />
        </eventMatch>
      </repLim> -->
    </condition>
    <authorizationAction name="default" fallback="fallback">
      <allow>
        <executeSyncAction name="deployPolicy">
          <paramter name="file" value="abc.xml"/>
        </executeAction>
      </allow>
    </authorizationAction>
    <authorizationAction name="fallback" fallback="fb2">
      <allow>
        <modify>
          <!-- ... -->
        </modify>
      </allow>
    </authorizationAction>
  <executeAsyncAction name="log" processor="pep|pxp">
  <!-- ... -->
  </executeAction>
  </preventiveMechanism>
</policySet>

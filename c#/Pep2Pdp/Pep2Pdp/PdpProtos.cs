// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace pdp {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PdpProtos {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_pdp_GpBoolean__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpBoolean, global::pdp.GpBoolean.Builder> internal__static_pdp_GpBoolean__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpString__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpString, global::pdp.GpString.Builder> internal__static_pdp_GpString__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpEvent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpEvent, global::pdp.GpEvent.Builder> internal__static_pdp_GpEvent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpEvent_GpMapEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpEvent.Types.GpMapEntry, global::pdp.GpEvent.Types.GpMapEntry.Builder> internal__static_pdp_GpEvent_GpMapEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpStatus, global::pdp.GpStatus.Builder> internal__static_pdp_GpStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpResponse, global::pdp.GpResponse.Builder> internal__static_pdp_GpResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpData, global::pdp.GpData.Builder> internal__static_pdp_GpData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpDataList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpDataList, global::pdp.GpDataList.Builder> internal__static_pdp_GpDataList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpContainer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpContainer, global::pdp.GpContainer.Builder> internal__static_pdp_GpContainer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpContainerList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpContainerList, global::pdp.GpContainerList.Builder> internal__static_pdp_GpContainerList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpOslFormula__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpOslFormula, global::pdp.GpOslFormula.Builder> internal__static_pdp_GpOslFormula__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpDataEventMap__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpDataEventMap, global::pdp.GpDataEventMap.Builder> internal__static_pdp_GpDataEventMap__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry, global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.Builder> internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpStateEventMap__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpStateEventMap, global::pdp.GpStateEventMap.Builder> internal__static_pdp_GpStateEventMap__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry, global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.Builder> internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpSimplifiedTemporalLogic__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpSimplifiedTemporalLogic, global::pdp.GpSimplifiedTemporalLogic.Builder> internal__static_pdp_GpSimplifiedTemporalLogic__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpCondition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpCondition, global::pdp.GpCondition.Builder> internal__static_pdp_GpCondition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpHistory__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpHistory, global::pdp.GpHistory.Builder> internal__static_pdp_GpHistory__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpMechanism__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpMechanism, global::pdp.GpMechanism.Builder> internal__static_pdp_GpMechanism__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpConflictResolutionFlag__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpConflictResolutionFlag, global::pdp.GpConflictResolutionFlag.Builder> internal__static_pdp_GpConflictResolutionFlag__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpPipDeployer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpPipDeployer, global::pdp.GpPipDeployer.Builder> internal__static_pdp_GpPipDeployer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pdp_GpByteArray__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pdp.GpByteArray, global::pdp.GpByteArray.Builder> internal__static_pdp_GpByteArray__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PdpProtos() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg9QZHBQcm90b3MucHJvdG8SA3BkcCIaCglHcEJvb2xlYW4SDQoFdmFsdWUY" + 
          "ASACKAgiGQoIR3BTdHJpbmcSDQoFdmFsdWUYASACKAkikQEKB0dwRXZlbnQS" + 
          "DAoEbmFtZRgBIAEoCRIQCghpc0FjdHVhbBgCIAEoCBIpCghtYXBFbnRyeRgD" + 
          "IAMoCzIXLnBkcC5HcEV2ZW50LkdwTWFwRW50cnkSEQoJdGltZXN0YW1wGAQg" + 
          "ASgJGigKCkdwTWFwRW50cnkSCwoDa2V5GAEgAigJEg0KBXZhbHVlGAIgAigJ" + 
          "IrEBCghHcFN0YXR1cxImCgV2YWx1ZRgBIAIoDjIXLnBkcC5HcFN0YXR1cy5H" + 
          "cEVTdGF0dXMSFAoMZXJyb3JNZXNzYWdlGAIgASgJImcKCUdwRVN0YXR1cxII" + 
          "CgRPS0FZEAESCQoFRVJST1IQAhILCgdJTkhJQklUEAMSCQoFQUxMT1cQBBIK" + 
          "CgZNT0RJRlkQBRIhCh1FUlJPUl9FVkVOVF9QQVJBTUVURVJfTUlTU0lORxAG" + 
          "IoIBCgpHcFJlc3BvbnNlEioKE2F1dGhvcml6YXRpb25BY3Rpb24YASABKAsy" + 
          "DS5wZHAuR3BTdGF0dXMSIwoNZXhlY3V0ZUFjdGlvbhgCIAMoCzIMLnBkcC5H" + 
          "cEV2ZW50EiMKDW1vZGlmaWVkRXZlbnQYAyABKAsyDC5wZHAuR3BFdmVudCIU" + 
          "CgZHcERhdGESCgoCaWQYASABKAkiLgoKR3BEYXRhTGlzdBIgCgtkYXRhRWxl" + 
          "bWVudBgBIAMoCzILLnBkcC5HcERhdGEiLQoLR3BDb250YWluZXISEgoKY2xh" + 
          "c3NWYWx1ZRgBIAEoCRIKCgJpZBgCIAEoCSI9Cg9HcENvbnRhaW5lckxpc3QS" + 
          "KgoQY29udGFpbmVyRWxlbWVudBgBIAMoCzIQLnBkcC5HcENvbnRhaW5lciIf" + 
          "CgxHcE9zbEZvcm11bGESDwoHZm9ybXVsYRgBIAEoCSKZAQoOR3BEYXRhRXZl" + 
          "bnRNYXASOQoIbWFwRW50cnkYASADKAsyJy5wZHAuR3BEYXRhRXZlbnRNYXAu" + 
          "R3BEYXRhRXZlbnRNYXBFbnRyeRpMChNHcERhdGFFdmVudE1hcEVudHJ5EhgK" + 
          "A2tleRgBIAIoCzILLnBkcC5HcERhdGESGwoFdmFsdWUYAiACKAsyDC5wZHAu" + 
          "R3BFdmVudCKQAQoPR3BTdGF0ZUV2ZW50TWFwEjsKCG1hcEVudHJ5GAEgAygL" + 
          "MikucGRwLkdwU3RhdGVFdmVudE1hcC5HcFN0YXRlRXZlbnRNYXBFbnRyeRpA" + 
          "ChRHcFN0YXRlRXZlbnRNYXBFbnRyeRILCgNrZXkYASACKAkSGwoFdmFsdWUY" + 
          "AiACKAsyDC5wZHAuR3BFdmVudCKXAQoZR3BTaW1wbGlmaWVkVGVtcG9yYWxM" + 
          "b2dpYxIpCgxkYXRhRXZlbnRNYXAYASABKAsyEy5wZHAuR3BEYXRhRXZlbnRN" + 
          "YXASIgoHZm9ybXVsYRgCIAEoCzIRLnBkcC5HcE9zbEZvcm11bGESKwoNc3Rh" + 
          "dGVFdmVudE1hcBgDIAEoCzIULnBkcC5HcFN0YXRlRXZlbnRNYXAiagoLR3BD" + 
          "b25kaXRpb24SJAoJY29uZGl0aW9uGAEgASgLMhEucGRwLkdwT3NsRm9ybXVs" + 
          "YRI1Cg1jb25kaXRpb25TaW1wGAIgASgLMh4ucGRwLkdwU2ltcGxpZmllZFRl" + 
          "bXBvcmFsTG9naWMiKAoJR3BIaXN0b3J5EhsKBXRyYWNlGAEgAygLMgwucGRw" + 
          "LkdwRXZlbnQirwEKC0dwTWVjaGFuaXNtEiMKCWNvbmRpdGlvbhgBIAEoCzIQ" + 
          "LnBkcC5HcENvbmRpdGlvbhIVCg1tZWNoYW5pc21OYW1lGAIgASgJEiEKCHJl" + 
          "c3BvbnNlGAMgASgLMg8ucGRwLkdwUmVzcG9uc2USHQoFc3RhdGUYBCABKAsy" + 
          "Di5wZHAuR3BIaXN0b3J5EiIKDHRyaWdnZXJFdmVudBgFIAEoCzIMLnBkcC5H" + 
          "cEV2ZW50IqgBChhHcENvbmZsaWN0UmVzb2x1dGlvbkZsYWcSQgoFdmFsdWUY" + 
          "ASACKA4yMy5wZHAuR3BDb25mbGljdFJlc29sdXRpb25GbGFnLkdwRUNvbmZs" + 
          "aWN0UmVzb2x1dGlvbiJIChVHcEVDb25mbGljdFJlc29sdXRpb24SDQoJT1ZF" + 
          "UldSSVRFEAESEgoOSUdOT1JFX1VQREFURVMQAhIMCghLRUVQX0FMTBADIikK" + 
          "DUdwUGlwRGVwbG95ZXISCgoCaWQYASACKAkSDAoEbmFtZRgCIAIoCSIgCgtH" + 
          "cEJ5dGVBcnJheRIRCglieXRlQXJyYXkYASACKAxCJAoXZGUudHVtLmluLmky" + 
          "Mi51Yy5jbS5ncGJCCVBkcFByb3Rvcw==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_pdp_GpBoolean__Descriptor = Descriptor.MessageTypes[0];
        internal__static_pdp_GpBoolean__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpBoolean, global::pdp.GpBoolean.Builder>(internal__static_pdp_GpBoolean__Descriptor,
                new string[] { "Value", });
        internal__static_pdp_GpString__Descriptor = Descriptor.MessageTypes[1];
        internal__static_pdp_GpString__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpString, global::pdp.GpString.Builder>(internal__static_pdp_GpString__Descriptor,
                new string[] { "Value", });
        internal__static_pdp_GpEvent__Descriptor = Descriptor.MessageTypes[2];
        internal__static_pdp_GpEvent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpEvent, global::pdp.GpEvent.Builder>(internal__static_pdp_GpEvent__Descriptor,
                new string[] { "Name", "IsActual", "MapEntry", "Timestamp", });
        internal__static_pdp_GpEvent_GpMapEntry__Descriptor = internal__static_pdp_GpEvent__Descriptor.NestedTypes[0];
        internal__static_pdp_GpEvent_GpMapEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpEvent.Types.GpMapEntry, global::pdp.GpEvent.Types.GpMapEntry.Builder>(internal__static_pdp_GpEvent_GpMapEntry__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_pdp_GpStatus__Descriptor = Descriptor.MessageTypes[3];
        internal__static_pdp_GpStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpStatus, global::pdp.GpStatus.Builder>(internal__static_pdp_GpStatus__Descriptor,
                new string[] { "Value", "ErrorMessage", });
        internal__static_pdp_GpResponse__Descriptor = Descriptor.MessageTypes[4];
        internal__static_pdp_GpResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpResponse, global::pdp.GpResponse.Builder>(internal__static_pdp_GpResponse__Descriptor,
                new string[] { "AuthorizationAction", "ExecuteAction", "ModifiedEvent", });
        internal__static_pdp_GpData__Descriptor = Descriptor.MessageTypes[5];
        internal__static_pdp_GpData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpData, global::pdp.GpData.Builder>(internal__static_pdp_GpData__Descriptor,
                new string[] { "Id", });
        internal__static_pdp_GpDataList__Descriptor = Descriptor.MessageTypes[6];
        internal__static_pdp_GpDataList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpDataList, global::pdp.GpDataList.Builder>(internal__static_pdp_GpDataList__Descriptor,
                new string[] { "DataElement", });
        internal__static_pdp_GpContainer__Descriptor = Descriptor.MessageTypes[7];
        internal__static_pdp_GpContainer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpContainer, global::pdp.GpContainer.Builder>(internal__static_pdp_GpContainer__Descriptor,
                new string[] { "ClassValue", "Id", });
        internal__static_pdp_GpContainerList__Descriptor = Descriptor.MessageTypes[8];
        internal__static_pdp_GpContainerList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpContainerList, global::pdp.GpContainerList.Builder>(internal__static_pdp_GpContainerList__Descriptor,
                new string[] { "ContainerElement", });
        internal__static_pdp_GpOslFormula__Descriptor = Descriptor.MessageTypes[9];
        internal__static_pdp_GpOslFormula__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpOslFormula, global::pdp.GpOslFormula.Builder>(internal__static_pdp_GpOslFormula__Descriptor,
                new string[] { "Formula", });
        internal__static_pdp_GpDataEventMap__Descriptor = Descriptor.MessageTypes[10];
        internal__static_pdp_GpDataEventMap__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpDataEventMap, global::pdp.GpDataEventMap.Builder>(internal__static_pdp_GpDataEventMap__Descriptor,
                new string[] { "MapEntry", });
        internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__Descriptor = internal__static_pdp_GpDataEventMap__Descriptor.NestedTypes[0];
        internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry, global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.Builder>(internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_pdp_GpStateEventMap__Descriptor = Descriptor.MessageTypes[11];
        internal__static_pdp_GpStateEventMap__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpStateEventMap, global::pdp.GpStateEventMap.Builder>(internal__static_pdp_GpStateEventMap__Descriptor,
                new string[] { "MapEntry", });
        internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__Descriptor = internal__static_pdp_GpStateEventMap__Descriptor.NestedTypes[0];
        internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry, global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.Builder>(internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_pdp_GpSimplifiedTemporalLogic__Descriptor = Descriptor.MessageTypes[12];
        internal__static_pdp_GpSimplifiedTemporalLogic__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpSimplifiedTemporalLogic, global::pdp.GpSimplifiedTemporalLogic.Builder>(internal__static_pdp_GpSimplifiedTemporalLogic__Descriptor,
                new string[] { "DataEventMap", "Formula", "StateEventMap", });
        internal__static_pdp_GpCondition__Descriptor = Descriptor.MessageTypes[13];
        internal__static_pdp_GpCondition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpCondition, global::pdp.GpCondition.Builder>(internal__static_pdp_GpCondition__Descriptor,
                new string[] { "Condition", "ConditionSimp", });
        internal__static_pdp_GpHistory__Descriptor = Descriptor.MessageTypes[14];
        internal__static_pdp_GpHistory__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpHistory, global::pdp.GpHistory.Builder>(internal__static_pdp_GpHistory__Descriptor,
                new string[] { "Trace", });
        internal__static_pdp_GpMechanism__Descriptor = Descriptor.MessageTypes[15];
        internal__static_pdp_GpMechanism__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpMechanism, global::pdp.GpMechanism.Builder>(internal__static_pdp_GpMechanism__Descriptor,
                new string[] { "Condition", "MechanismName", "Response", "State", "TriggerEvent", });
        internal__static_pdp_GpConflictResolutionFlag__Descriptor = Descriptor.MessageTypes[16];
        internal__static_pdp_GpConflictResolutionFlag__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpConflictResolutionFlag, global::pdp.GpConflictResolutionFlag.Builder>(internal__static_pdp_GpConflictResolutionFlag__Descriptor,
                new string[] { "Value", });
        internal__static_pdp_GpPipDeployer__Descriptor = Descriptor.MessageTypes[17];
        internal__static_pdp_GpPipDeployer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpPipDeployer, global::pdp.GpPipDeployer.Builder>(internal__static_pdp_GpPipDeployer__Descriptor,
                new string[] { "Id", "Name", });
        internal__static_pdp_GpByteArray__Descriptor = Descriptor.MessageTypes[18];
        internal__static_pdp_GpByteArray__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pdp.GpByteArray, global::pdp.GpByteArray.Builder>(internal__static_pdp_GpByteArray__Descriptor,
                new string[] { "ByteArray", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpBoolean : pb::GeneratedMessage<GpBoolean, GpBoolean.Builder> {
    private GpBoolean() { }
    private static readonly GpBoolean defaultInstance = new GpBoolean().MakeReadOnly();
    private static readonly string[] _gpBooleanFieldNames = new string[] { "value" };
    private static readonly uint[] _gpBooleanFieldTags = new uint[] { 8 };
    public static GpBoolean DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpBoolean DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpBoolean ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpBoolean__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpBoolean, GpBoolean.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpBoolean__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private bool value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public bool Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpBooleanFieldNames;
      if (hasValue) {
        output.WriteBool(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpBoolean ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpBoolean ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpBoolean ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpBoolean ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpBoolean ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpBoolean ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpBoolean ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpBoolean ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpBoolean ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpBoolean ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpBoolean MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpBoolean prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpBoolean, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpBoolean cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpBoolean result;
      
      private GpBoolean PrepareBuilder() {
        if (resultIsReadOnly) {
          GpBoolean original = result;
          result = new GpBoolean();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpBoolean MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpBoolean.Descriptor; }
      }
      
      public override GpBoolean DefaultInstanceForType {
        get { return global::pdp.GpBoolean.DefaultInstance; }
      }
      
      public override GpBoolean BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpBoolean) {
          return MergeFrom((GpBoolean) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpBoolean other) {
        if (other == global::pdp.GpBoolean.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpBooleanFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpBooleanFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasValue = input.ReadBool(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public bool Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(bool value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = false;
        return this;
      }
    }
    static GpBoolean() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpString : pb::GeneratedMessage<GpString, GpString.Builder> {
    private GpString() { }
    private static readonly GpString defaultInstance = new GpString().MakeReadOnly();
    private static readonly string[] _gpStringFieldNames = new string[] { "value" };
    private static readonly uint[] _gpStringFieldTags = new uint[] { 10 };
    public static GpString DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpString DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpString ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpString__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpString, GpString.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpString__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpStringFieldNames;
      if (hasValue) {
        output.WriteString(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpString ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpString ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpString ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpString ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpString ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpString ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpString ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpString ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpString ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpString ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpString MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpString prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpString, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpString cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpString result;
      
      private GpString PrepareBuilder() {
        if (resultIsReadOnly) {
          GpString original = result;
          result = new GpString();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpString MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpString.Descriptor; }
      }
      
      public override GpString DefaultInstanceForType {
        get { return global::pdp.GpString.DefaultInstance; }
      }
      
      public override GpString BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpString) {
          return MergeFrom((GpString) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpString other) {
        if (other == global::pdp.GpString.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpStringFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpStringFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    static GpString() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpEvent : pb::GeneratedMessage<GpEvent, GpEvent.Builder> {
    private GpEvent() { }
    private static readonly GpEvent defaultInstance = new GpEvent().MakeReadOnly();
    private static readonly string[] _gpEventFieldNames = new string[] { "isActual", "mapEntry", "name", "timestamp" };
    private static readonly uint[] _gpEventFieldTags = new uint[] { 16, 26, 10, 34 };
    public static GpEvent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpEvent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpEvent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpEvent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpEvent, GpEvent.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpEvent__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class GpMapEntry : pb::GeneratedMessage<GpMapEntry, GpMapEntry.Builder> {
        private GpMapEntry() { }
        private static readonly GpMapEntry defaultInstance = new GpMapEntry().MakeReadOnly();
        private static readonly string[] _gpMapEntryFieldNames = new string[] { "key", "value" };
        private static readonly uint[] _gpMapEntryFieldTags = new uint[] { 10, 18 };
        public static GpMapEntry DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override GpMapEntry DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override GpMapEntry ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::pdp.PdpProtos.internal__static_pdp_GpEvent_GpMapEntry__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<GpMapEntry, GpMapEntry.Builder> InternalFieldAccessors {
          get { return global::pdp.PdpProtos.internal__static_pdp_GpEvent_GpMapEntry__FieldAccessorTable; }
        }
        
        public const int KeyFieldNumber = 1;
        private bool hasKey;
        private string key_ = "";
        public bool HasKey {
          get { return hasKey; }
        }
        public string Key {
          get { return key_; }
        }
        
        public const int ValueFieldNumber = 2;
        private bool hasValue;
        private string value_ = "";
        public bool HasValue {
          get { return hasValue; }
        }
        public string Value {
          get { return value_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasKey) return false;
            if (!hasValue) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _gpMapEntryFieldNames;
          if (hasKey) {
            output.WriteString(1, field_names[0], Key);
          }
          if (hasValue) {
            output.WriteString(2, field_names[1], Value);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasKey) {
              size += pb::CodedOutputStream.ComputeStringSize(1, Key);
            }
            if (hasValue) {
              size += pb::CodedOutputStream.ComputeStringSize(2, Value);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static GpMapEntry ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GpMapEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GpMapEntry ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GpMapEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GpMapEntry ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GpMapEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static GpMapEntry ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static GpMapEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static GpMapEntry ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GpMapEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private GpMapEntry MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(GpMapEntry prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<GpMapEntry, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(GpMapEntry cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private GpMapEntry result;
          
          private GpMapEntry PrepareBuilder() {
            if (resultIsReadOnly) {
              GpMapEntry original = result;
              result = new GpMapEntry();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override GpMapEntry MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::pdp.GpEvent.Types.GpMapEntry.Descriptor; }
          }
          
          public override GpMapEntry DefaultInstanceForType {
            get { return global::pdp.GpEvent.Types.GpMapEntry.DefaultInstance; }
          }
          
          public override GpMapEntry BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is GpMapEntry) {
              return MergeFrom((GpMapEntry) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(GpMapEntry other) {
            if (other == global::pdp.GpEvent.Types.GpMapEntry.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasKey) {
              Key = other.Key;
            }
            if (other.HasValue) {
              Value = other.Value;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_gpMapEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _gpMapEntryFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasKey = input.ReadString(ref result.key_);
                  break;
                }
                case 18: {
                  result.hasValue = input.ReadString(ref result.value_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasKey {
            get { return result.hasKey; }
          }
          public string Key {
            get { return result.Key; }
            set { SetKey(value); }
          }
          public Builder SetKey(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasKey = true;
            result.key_ = value;
            return this;
          }
          public Builder ClearKey() {
            PrepareBuilder();
            result.hasKey = false;
            result.key_ = "";
            return this;
          }
          
          public bool HasValue {
            get { return result.hasValue; }
          }
          public string Value {
            get { return result.Value; }
            set { SetValue(value); }
          }
          public Builder SetValue(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasValue = true;
            result.value_ = value;
            return this;
          }
          public Builder ClearValue() {
            PrepareBuilder();
            result.hasValue = false;
            result.value_ = "";
            return this;
          }
        }
        static GpMapEntry() {
          object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int IsActualFieldNumber = 2;
    private bool hasIsActual;
    private bool isActual_;
    public bool HasIsActual {
      get { return hasIsActual; }
    }
    public bool IsActual {
      get { return isActual_; }
    }
    
    public const int MapEntryFieldNumber = 3;
    private pbc::PopsicleList<global::pdp.GpEvent.Types.GpMapEntry> mapEntry_ = new pbc::PopsicleList<global::pdp.GpEvent.Types.GpMapEntry>();
    public scg::IList<global::pdp.GpEvent.Types.GpMapEntry> MapEntryList {
      get { return mapEntry_; }
    }
    public int MapEntryCount {
      get { return mapEntry_.Count; }
    }
    public global::pdp.GpEvent.Types.GpMapEntry GetMapEntry(int index) {
      return mapEntry_[index];
    }
    
    public const int TimestampFieldNumber = 4;
    private bool hasTimestamp;
    private string timestamp_ = "";
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public string Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::pdp.GpEvent.Types.GpMapEntry element in MapEntryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpEventFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[2], Name);
      }
      if (hasIsActual) {
        output.WriteBool(2, field_names[0], IsActual);
      }
      if (mapEntry_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], mapEntry_);
      }
      if (hasTimestamp) {
        output.WriteString(4, field_names[3], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasIsActual) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsActual);
        }
        foreach (global::pdp.GpEvent.Types.GpMapEntry element in MapEntryList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Timestamp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpEvent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpEvent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpEvent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpEvent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpEvent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpEvent MakeReadOnly() {
      mapEntry_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpEvent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpEvent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpEvent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpEvent result;
      
      private GpEvent PrepareBuilder() {
        if (resultIsReadOnly) {
          GpEvent original = result;
          result = new GpEvent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpEvent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpEvent.Descriptor; }
      }
      
      public override GpEvent DefaultInstanceForType {
        get { return global::pdp.GpEvent.DefaultInstance; }
      }
      
      public override GpEvent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpEvent) {
          return MergeFrom((GpEvent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpEvent other) {
        if (other == global::pdp.GpEvent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasIsActual) {
          IsActual = other.IsActual;
        }
        if (other.mapEntry_.Count != 0) {
          result.mapEntry_.Add(other.mapEntry_);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpEventFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpEventFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasIsActual = input.ReadBool(ref result.isActual_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.mapEntry_, global::pdp.GpEvent.Types.GpMapEntry.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              result.hasTimestamp = input.ReadString(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasIsActual {
        get { return result.hasIsActual; }
      }
      public bool IsActual {
        get { return result.IsActual; }
        set { SetIsActual(value); }
      }
      public Builder SetIsActual(bool value) {
        PrepareBuilder();
        result.hasIsActual = true;
        result.isActual_ = value;
        return this;
      }
      public Builder ClearIsActual() {
        PrepareBuilder();
        result.hasIsActual = false;
        result.isActual_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::pdp.GpEvent.Types.GpMapEntry> MapEntryList {
        get { return PrepareBuilder().mapEntry_; }
      }
      public int MapEntryCount {
        get { return result.MapEntryCount; }
      }
      public global::pdp.GpEvent.Types.GpMapEntry GetMapEntry(int index) {
        return result.GetMapEntry(index);
      }
      public Builder SetMapEntry(int index, global::pdp.GpEvent.Types.GpMapEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mapEntry_[index] = value;
        return this;
      }
      public Builder SetMapEntry(int index, global::pdp.GpEvent.Types.GpMapEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mapEntry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMapEntry(global::pdp.GpEvent.Types.GpMapEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mapEntry_.Add(value);
        return this;
      }
      public Builder AddMapEntry(global::pdp.GpEvent.Types.GpMapEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mapEntry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMapEntry(scg::IEnumerable<global::pdp.GpEvent.Types.GpMapEntry> values) {
        PrepareBuilder();
        result.mapEntry_.Add(values);
        return this;
      }
      public Builder ClearMapEntry() {
        PrepareBuilder();
        result.mapEntry_.Clear();
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public string Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = "";
        return this;
      }
    }
    static GpEvent() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpStatus : pb::GeneratedMessage<GpStatus, GpStatus.Builder> {
    private GpStatus() { }
    private static readonly GpStatus defaultInstance = new GpStatus().MakeReadOnly();
    private static readonly string[] _gpStatusFieldNames = new string[] { "errorMessage", "value" };
    private static readonly uint[] _gpStatusFieldTags = new uint[] { 18, 8 };
    public static GpStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpStatus, GpStatus.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpStatus__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum GpEStatus {
        OKAY = 1,
        ERROR = 2,
        INHIBIT = 3,
        ALLOW = 4,
        MODIFY = 5,
        ERROR_EVENT_PARAMETER_MISSING = 6,
      }
      
    }
    #endregion
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private global::pdp.GpStatus.Types.GpEStatus value_ = global::pdp.GpStatus.Types.GpEStatus.OKAY;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::pdp.GpStatus.Types.GpEStatus Value {
      get { return value_; }
    }
    
    public const int ErrorMessageFieldNumber = 2;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpStatusFieldNames;
      if (hasValue) {
        output.WriteEnum(1, field_names[1], (int) Value, Value);
      }
      if (hasErrorMessage) {
        output.WriteString(2, field_names[0], ErrorMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Value);
        }
        if (hasErrorMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ErrorMessage);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpStatus result;
      
      private GpStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          GpStatus original = result;
          result = new GpStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpStatus.Descriptor; }
      }
      
      public override GpStatus DefaultInstanceForType {
        get { return global::pdp.GpStatus.DefaultInstance; }
      }
      
      public override GpStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpStatus) {
          return MergeFrom((GpStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpStatus other) {
        if (other == global::pdp.GpStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.value_, out unknown)) {
                result.hasValue = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::pdp.GpStatus.Types.GpEStatus Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::pdp.GpStatus.Types.GpEStatus value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = global::pdp.GpStatus.Types.GpEStatus.OKAY;
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
    }
    static GpStatus() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpResponse : pb::GeneratedMessage<GpResponse, GpResponse.Builder> {
    private GpResponse() { }
    private static readonly GpResponse defaultInstance = new GpResponse().MakeReadOnly();
    private static readonly string[] _gpResponseFieldNames = new string[] { "authorizationAction", "executeAction", "modifiedEvent" };
    private static readonly uint[] _gpResponseFieldTags = new uint[] { 10, 18, 26 };
    public static GpResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpResponse, GpResponse.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpResponse__FieldAccessorTable; }
    }
    
    public const int AuthorizationActionFieldNumber = 1;
    private bool hasAuthorizationAction;
    private global::pdp.GpStatus authorizationAction_;
    public bool HasAuthorizationAction {
      get { return hasAuthorizationAction; }
    }
    public global::pdp.GpStatus AuthorizationAction {
      get { return authorizationAction_ ?? global::pdp.GpStatus.DefaultInstance; }
    }
    
    public const int ExecuteActionFieldNumber = 2;
    private pbc::PopsicleList<global::pdp.GpEvent> executeAction_ = new pbc::PopsicleList<global::pdp.GpEvent>();
    public scg::IList<global::pdp.GpEvent> ExecuteActionList {
      get { return executeAction_; }
    }
    public int ExecuteActionCount {
      get { return executeAction_.Count; }
    }
    public global::pdp.GpEvent GetExecuteAction(int index) {
      return executeAction_[index];
    }
    
    public const int ModifiedEventFieldNumber = 3;
    private bool hasModifiedEvent;
    private global::pdp.GpEvent modifiedEvent_;
    public bool HasModifiedEvent {
      get { return hasModifiedEvent; }
    }
    public global::pdp.GpEvent ModifiedEvent {
      get { return modifiedEvent_ ?? global::pdp.GpEvent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAuthorizationAction) {
          if (!AuthorizationAction.IsInitialized) return false;
        }
        foreach (global::pdp.GpEvent element in ExecuteActionList) {
          if (!element.IsInitialized) return false;
        }
        if (HasModifiedEvent) {
          if (!ModifiedEvent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpResponseFieldNames;
      if (hasAuthorizationAction) {
        output.WriteMessage(1, field_names[0], AuthorizationAction);
      }
      if (executeAction_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], executeAction_);
      }
      if (hasModifiedEvent) {
        output.WriteMessage(3, field_names[2], ModifiedEvent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthorizationAction) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AuthorizationAction);
        }
        foreach (global::pdp.GpEvent element in ExecuteActionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasModifiedEvent) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ModifiedEvent);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpResponse MakeReadOnly() {
      executeAction_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpResponse result;
      
      private GpResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GpResponse original = result;
          result = new GpResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpResponse.Descriptor; }
      }
      
      public override GpResponse DefaultInstanceForType {
        get { return global::pdp.GpResponse.DefaultInstance; }
      }
      
      public override GpResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpResponse) {
          return MergeFrom((GpResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpResponse other) {
        if (other == global::pdp.GpResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthorizationAction) {
          MergeAuthorizationAction(other.AuthorizationAction);
        }
        if (other.executeAction_.Count != 0) {
          result.executeAction_.Add(other.executeAction_);
        }
        if (other.HasModifiedEvent) {
          MergeModifiedEvent(other.ModifiedEvent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pdp.GpStatus.Builder subBuilder = global::pdp.GpStatus.CreateBuilder();
              if (result.hasAuthorizationAction) {
                subBuilder.MergeFrom(AuthorizationAction);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AuthorizationAction = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.executeAction_, global::pdp.GpEvent.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::pdp.GpEvent.Builder subBuilder = global::pdp.GpEvent.CreateBuilder();
              if (result.hasModifiedEvent) {
                subBuilder.MergeFrom(ModifiedEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ModifiedEvent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthorizationAction {
       get { return result.hasAuthorizationAction; }
      }
      public global::pdp.GpStatus AuthorizationAction {
        get { return result.AuthorizationAction; }
        set { SetAuthorizationAction(value); }
      }
      public Builder SetAuthorizationAction(global::pdp.GpStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthorizationAction = true;
        result.authorizationAction_ = value;
        return this;
      }
      public Builder SetAuthorizationAction(global::pdp.GpStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAuthorizationAction = true;
        result.authorizationAction_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAuthorizationAction(global::pdp.GpStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAuthorizationAction &&
            result.authorizationAction_ != global::pdp.GpStatus.DefaultInstance) {
            result.authorizationAction_ = global::pdp.GpStatus.CreateBuilder(result.authorizationAction_).MergeFrom(value).BuildPartial();
        } else {
          result.authorizationAction_ = value;
        }
        result.hasAuthorizationAction = true;
        return this;
      }
      public Builder ClearAuthorizationAction() {
        PrepareBuilder();
        result.hasAuthorizationAction = false;
        result.authorizationAction_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::pdp.GpEvent> ExecuteActionList {
        get { return PrepareBuilder().executeAction_; }
      }
      public int ExecuteActionCount {
        get { return result.ExecuteActionCount; }
      }
      public global::pdp.GpEvent GetExecuteAction(int index) {
        return result.GetExecuteAction(index);
      }
      public Builder SetExecuteAction(int index, global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.executeAction_[index] = value;
        return this;
      }
      public Builder SetExecuteAction(int index, global::pdp.GpEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.executeAction_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExecuteAction(global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.executeAction_.Add(value);
        return this;
      }
      public Builder AddExecuteAction(global::pdp.GpEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.executeAction_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExecuteAction(scg::IEnumerable<global::pdp.GpEvent> values) {
        PrepareBuilder();
        result.executeAction_.Add(values);
        return this;
      }
      public Builder ClearExecuteAction() {
        PrepareBuilder();
        result.executeAction_.Clear();
        return this;
      }
      
      public bool HasModifiedEvent {
       get { return result.hasModifiedEvent; }
      }
      public global::pdp.GpEvent ModifiedEvent {
        get { return result.ModifiedEvent; }
        set { SetModifiedEvent(value); }
      }
      public Builder SetModifiedEvent(global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasModifiedEvent = true;
        result.modifiedEvent_ = value;
        return this;
      }
      public Builder SetModifiedEvent(global::pdp.GpEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasModifiedEvent = true;
        result.modifiedEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeModifiedEvent(global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasModifiedEvent &&
            result.modifiedEvent_ != global::pdp.GpEvent.DefaultInstance) {
            result.modifiedEvent_ = global::pdp.GpEvent.CreateBuilder(result.modifiedEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.modifiedEvent_ = value;
        }
        result.hasModifiedEvent = true;
        return this;
      }
      public Builder ClearModifiedEvent() {
        PrepareBuilder();
        result.hasModifiedEvent = false;
        result.modifiedEvent_ = null;
        return this;
      }
    }
    static GpResponse() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpData : pb::GeneratedMessage<GpData, GpData.Builder> {
    private GpData() { }
    private static readonly GpData defaultInstance = new GpData().MakeReadOnly();
    private static readonly string[] _gpDataFieldNames = new string[] { "id" };
    private static readonly uint[] _gpDataFieldTags = new uint[] { 10 };
    public static GpData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpData, GpData.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpData__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpDataFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpData result;
      
      private GpData PrepareBuilder() {
        if (resultIsReadOnly) {
          GpData original = result;
          result = new GpData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpData.Descriptor; }
      }
      
      public override GpData DefaultInstanceForType {
        get { return global::pdp.GpData.DefaultInstance; }
      }
      
      public override GpData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpData) {
          return MergeFrom((GpData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpData other) {
        if (other == global::pdp.GpData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static GpData() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpDataList : pb::GeneratedMessage<GpDataList, GpDataList.Builder> {
    private GpDataList() { }
    private static readonly GpDataList defaultInstance = new GpDataList().MakeReadOnly();
    private static readonly string[] _gpDataListFieldNames = new string[] { "dataElement" };
    private static readonly uint[] _gpDataListFieldTags = new uint[] { 10 };
    public static GpDataList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpDataList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpDataList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpDataList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpDataList, GpDataList.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpDataList__FieldAccessorTable; }
    }
    
    public const int DataElementFieldNumber = 1;
    private pbc::PopsicleList<global::pdp.GpData> dataElement_ = new pbc::PopsicleList<global::pdp.GpData>();
    public scg::IList<global::pdp.GpData> DataElementList {
      get { return dataElement_; }
    }
    public int DataElementCount {
      get { return dataElement_.Count; }
    }
    public global::pdp.GpData GetDataElement(int index) {
      return dataElement_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpDataListFieldNames;
      if (dataElement_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], dataElement_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::pdp.GpData element in DataElementList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpDataList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpDataList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpDataList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpDataList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpDataList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpDataList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpDataList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpDataList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpDataList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpDataList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpDataList MakeReadOnly() {
      dataElement_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpDataList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpDataList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpDataList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpDataList result;
      
      private GpDataList PrepareBuilder() {
        if (resultIsReadOnly) {
          GpDataList original = result;
          result = new GpDataList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpDataList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpDataList.Descriptor; }
      }
      
      public override GpDataList DefaultInstanceForType {
        get { return global::pdp.GpDataList.DefaultInstance; }
      }
      
      public override GpDataList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpDataList) {
          return MergeFrom((GpDataList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpDataList other) {
        if (other == global::pdp.GpDataList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.dataElement_.Count != 0) {
          result.dataElement_.Add(other.dataElement_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpDataListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpDataListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.dataElement_, global::pdp.GpData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pdp.GpData> DataElementList {
        get { return PrepareBuilder().dataElement_; }
      }
      public int DataElementCount {
        get { return result.DataElementCount; }
      }
      public global::pdp.GpData GetDataElement(int index) {
        return result.GetDataElement(index);
      }
      public Builder SetDataElement(int index, global::pdp.GpData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dataElement_[index] = value;
        return this;
      }
      public Builder SetDataElement(int index, global::pdp.GpData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.dataElement_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDataElement(global::pdp.GpData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dataElement_.Add(value);
        return this;
      }
      public Builder AddDataElement(global::pdp.GpData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.dataElement_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDataElement(scg::IEnumerable<global::pdp.GpData> values) {
        PrepareBuilder();
        result.dataElement_.Add(values);
        return this;
      }
      public Builder ClearDataElement() {
        PrepareBuilder();
        result.dataElement_.Clear();
        return this;
      }
    }
    static GpDataList() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpContainer : pb::GeneratedMessage<GpContainer, GpContainer.Builder> {
    private GpContainer() { }
    private static readonly GpContainer defaultInstance = new GpContainer().MakeReadOnly();
    private static readonly string[] _gpContainerFieldNames = new string[] { "classValue", "id" };
    private static readonly uint[] _gpContainerFieldTags = new uint[] { 10, 18 };
    public static GpContainer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpContainer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpContainer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpContainer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpContainer, GpContainer.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpContainer__FieldAccessorTable; }
    }
    
    public const int ClassValueFieldNumber = 1;
    private bool hasClassValue;
    private string classValue_ = "";
    public bool HasClassValue {
      get { return hasClassValue; }
    }
    public string ClassValue {
      get { return classValue_; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpContainerFieldNames;
      if (hasClassValue) {
        output.WriteString(1, field_names[0], ClassValue);
      }
      if (hasId) {
        output.WriteString(2, field_names[1], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClassValue) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ClassValue);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpContainer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpContainer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpContainer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpContainer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpContainer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpContainer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpContainer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpContainer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpContainer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpContainer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpContainer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpContainer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpContainer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpContainer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpContainer result;
      
      private GpContainer PrepareBuilder() {
        if (resultIsReadOnly) {
          GpContainer original = result;
          result = new GpContainer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpContainer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpContainer.Descriptor; }
      }
      
      public override GpContainer DefaultInstanceForType {
        get { return global::pdp.GpContainer.DefaultInstance; }
      }
      
      public override GpContainer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpContainer) {
          return MergeFrom((GpContainer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpContainer other) {
        if (other == global::pdp.GpContainer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClassValue) {
          ClassValue = other.ClassValue;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpContainerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpContainerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasClassValue = input.ReadString(ref result.classValue_);
              break;
            }
            case 18: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClassValue {
        get { return result.hasClassValue; }
      }
      public string ClassValue {
        get { return result.ClassValue; }
        set { SetClassValue(value); }
      }
      public Builder SetClassValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClassValue = true;
        result.classValue_ = value;
        return this;
      }
      public Builder ClearClassValue() {
        PrepareBuilder();
        result.hasClassValue = false;
        result.classValue_ = "";
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static GpContainer() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpContainerList : pb::GeneratedMessage<GpContainerList, GpContainerList.Builder> {
    private GpContainerList() { }
    private static readonly GpContainerList defaultInstance = new GpContainerList().MakeReadOnly();
    private static readonly string[] _gpContainerListFieldNames = new string[] { "containerElement" };
    private static readonly uint[] _gpContainerListFieldTags = new uint[] { 10 };
    public static GpContainerList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpContainerList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpContainerList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpContainerList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpContainerList, GpContainerList.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpContainerList__FieldAccessorTable; }
    }
    
    public const int ContainerElementFieldNumber = 1;
    private pbc::PopsicleList<global::pdp.GpContainer> containerElement_ = new pbc::PopsicleList<global::pdp.GpContainer>();
    public scg::IList<global::pdp.GpContainer> ContainerElementList {
      get { return containerElement_; }
    }
    public int ContainerElementCount {
      get { return containerElement_.Count; }
    }
    public global::pdp.GpContainer GetContainerElement(int index) {
      return containerElement_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpContainerListFieldNames;
      if (containerElement_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], containerElement_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::pdp.GpContainer element in ContainerElementList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpContainerList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpContainerList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpContainerList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpContainerList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpContainerList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpContainerList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpContainerList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpContainerList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpContainerList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpContainerList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpContainerList MakeReadOnly() {
      containerElement_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpContainerList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpContainerList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpContainerList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpContainerList result;
      
      private GpContainerList PrepareBuilder() {
        if (resultIsReadOnly) {
          GpContainerList original = result;
          result = new GpContainerList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpContainerList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpContainerList.Descriptor; }
      }
      
      public override GpContainerList DefaultInstanceForType {
        get { return global::pdp.GpContainerList.DefaultInstance; }
      }
      
      public override GpContainerList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpContainerList) {
          return MergeFrom((GpContainerList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpContainerList other) {
        if (other == global::pdp.GpContainerList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.containerElement_.Count != 0) {
          result.containerElement_.Add(other.containerElement_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpContainerListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpContainerListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.containerElement_, global::pdp.GpContainer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pdp.GpContainer> ContainerElementList {
        get { return PrepareBuilder().containerElement_; }
      }
      public int ContainerElementCount {
        get { return result.ContainerElementCount; }
      }
      public global::pdp.GpContainer GetContainerElement(int index) {
        return result.GetContainerElement(index);
      }
      public Builder SetContainerElement(int index, global::pdp.GpContainer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.containerElement_[index] = value;
        return this;
      }
      public Builder SetContainerElement(int index, global::pdp.GpContainer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.containerElement_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContainerElement(global::pdp.GpContainer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.containerElement_.Add(value);
        return this;
      }
      public Builder AddContainerElement(global::pdp.GpContainer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.containerElement_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContainerElement(scg::IEnumerable<global::pdp.GpContainer> values) {
        PrepareBuilder();
        result.containerElement_.Add(values);
        return this;
      }
      public Builder ClearContainerElement() {
        PrepareBuilder();
        result.containerElement_.Clear();
        return this;
      }
    }
    static GpContainerList() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpOslFormula : pb::GeneratedMessage<GpOslFormula, GpOslFormula.Builder> {
    private GpOslFormula() { }
    private static readonly GpOslFormula defaultInstance = new GpOslFormula().MakeReadOnly();
    private static readonly string[] _gpOslFormulaFieldNames = new string[] { "formula" };
    private static readonly uint[] _gpOslFormulaFieldTags = new uint[] { 10 };
    public static GpOslFormula DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpOslFormula DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpOslFormula ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpOslFormula__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpOslFormula, GpOslFormula.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpOslFormula__FieldAccessorTable; }
    }
    
    public const int FormulaFieldNumber = 1;
    private bool hasFormula;
    private string formula_ = "";
    public bool HasFormula {
      get { return hasFormula; }
    }
    public string Formula {
      get { return formula_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpOslFormulaFieldNames;
      if (hasFormula) {
        output.WriteString(1, field_names[0], Formula);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFormula) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Formula);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpOslFormula ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpOslFormula ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpOslFormula ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpOslFormula ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpOslFormula ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpOslFormula ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpOslFormula ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpOslFormula ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpOslFormula ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpOslFormula ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpOslFormula MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpOslFormula prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpOslFormula, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpOslFormula cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpOslFormula result;
      
      private GpOslFormula PrepareBuilder() {
        if (resultIsReadOnly) {
          GpOslFormula original = result;
          result = new GpOslFormula();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpOslFormula MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpOslFormula.Descriptor; }
      }
      
      public override GpOslFormula DefaultInstanceForType {
        get { return global::pdp.GpOslFormula.DefaultInstance; }
      }
      
      public override GpOslFormula BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpOslFormula) {
          return MergeFrom((GpOslFormula) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpOslFormula other) {
        if (other == global::pdp.GpOslFormula.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFormula) {
          Formula = other.Formula;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpOslFormulaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpOslFormulaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFormula = input.ReadString(ref result.formula_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFormula {
        get { return result.hasFormula; }
      }
      public string Formula {
        get { return result.Formula; }
        set { SetFormula(value); }
      }
      public Builder SetFormula(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFormula = true;
        result.formula_ = value;
        return this;
      }
      public Builder ClearFormula() {
        PrepareBuilder();
        result.hasFormula = false;
        result.formula_ = "";
        return this;
      }
    }
    static GpOslFormula() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpDataEventMap : pb::GeneratedMessage<GpDataEventMap, GpDataEventMap.Builder> {
    private GpDataEventMap() { }
    private static readonly GpDataEventMap defaultInstance = new GpDataEventMap().MakeReadOnly();
    private static readonly string[] _gpDataEventMapFieldNames = new string[] { "mapEntry" };
    private static readonly uint[] _gpDataEventMapFieldTags = new uint[] { 10 };
    public static GpDataEventMap DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpDataEventMap DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpDataEventMap ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpDataEventMap__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpDataEventMap, GpDataEventMap.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpDataEventMap__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class GpDataEventMapEntry : pb::GeneratedMessage<GpDataEventMapEntry, GpDataEventMapEntry.Builder> {
        private GpDataEventMapEntry() { }
        private static readonly GpDataEventMapEntry defaultInstance = new GpDataEventMapEntry().MakeReadOnly();
        private static readonly string[] _gpDataEventMapEntryFieldNames = new string[] { "key", "value" };
        private static readonly uint[] _gpDataEventMapEntryFieldTags = new uint[] { 10, 18 };
        public static GpDataEventMapEntry DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override GpDataEventMapEntry DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override GpDataEventMapEntry ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::pdp.PdpProtos.internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<GpDataEventMapEntry, GpDataEventMapEntry.Builder> InternalFieldAccessors {
          get { return global::pdp.PdpProtos.internal__static_pdp_GpDataEventMap_GpDataEventMapEntry__FieldAccessorTable; }
        }
        
        public const int KeyFieldNumber = 1;
        private bool hasKey;
        private global::pdp.GpData key_;
        public bool HasKey {
          get { return hasKey; }
        }
        public global::pdp.GpData Key {
          get { return key_ ?? global::pdp.GpData.DefaultInstance; }
        }
        
        public const int ValueFieldNumber = 2;
        private bool hasValue;
        private global::pdp.GpEvent value_;
        public bool HasValue {
          get { return hasValue; }
        }
        public global::pdp.GpEvent Value {
          get { return value_ ?? global::pdp.GpEvent.DefaultInstance; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasKey) return false;
            if (!hasValue) return false;
            if (!Value.IsInitialized) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _gpDataEventMapEntryFieldNames;
          if (hasKey) {
            output.WriteMessage(1, field_names[0], Key);
          }
          if (hasValue) {
            output.WriteMessage(2, field_names[1], Value);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasKey) {
              size += pb::CodedOutputStream.ComputeMessageSize(1, Key);
            }
            if (hasValue) {
              size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static GpDataEventMapEntry ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static GpDataEventMapEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GpDataEventMapEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private GpDataEventMapEntry MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(GpDataEventMapEntry prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<GpDataEventMapEntry, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(GpDataEventMapEntry cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private GpDataEventMapEntry result;
          
          private GpDataEventMapEntry PrepareBuilder() {
            if (resultIsReadOnly) {
              GpDataEventMapEntry original = result;
              result = new GpDataEventMapEntry();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override GpDataEventMapEntry MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.Descriptor; }
          }
          
          public override GpDataEventMapEntry DefaultInstanceForType {
            get { return global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.DefaultInstance; }
          }
          
          public override GpDataEventMapEntry BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is GpDataEventMapEntry) {
              return MergeFrom((GpDataEventMapEntry) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(GpDataEventMapEntry other) {
            if (other == global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasKey) {
              MergeKey(other.Key);
            }
            if (other.HasValue) {
              MergeValue(other.Value);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_gpDataEventMapEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _gpDataEventMapEntryFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  global::pdp.GpData.Builder subBuilder = global::pdp.GpData.CreateBuilder();
                  if (result.hasKey) {
                    subBuilder.MergeFrom(Key);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Key = subBuilder.BuildPartial();
                  break;
                }
                case 18: {
                  global::pdp.GpEvent.Builder subBuilder = global::pdp.GpEvent.CreateBuilder();
                  if (result.hasValue) {
                    subBuilder.MergeFrom(Value);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Value = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasKey {
           get { return result.hasKey; }
          }
          public global::pdp.GpData Key {
            get { return result.Key; }
            set { SetKey(value); }
          }
          public Builder SetKey(global::pdp.GpData value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasKey = true;
            result.key_ = value;
            return this;
          }
          public Builder SetKey(global::pdp.GpData.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasKey = true;
            result.key_ = builderForValue.Build();
            return this;
          }
          public Builder MergeKey(global::pdp.GpData value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasKey &&
                result.key_ != global::pdp.GpData.DefaultInstance) {
                result.key_ = global::pdp.GpData.CreateBuilder(result.key_).MergeFrom(value).BuildPartial();
            } else {
              result.key_ = value;
            }
            result.hasKey = true;
            return this;
          }
          public Builder ClearKey() {
            PrepareBuilder();
            result.hasKey = false;
            result.key_ = null;
            return this;
          }
          
          public bool HasValue {
           get { return result.hasValue; }
          }
          public global::pdp.GpEvent Value {
            get { return result.Value; }
            set { SetValue(value); }
          }
          public Builder SetValue(global::pdp.GpEvent value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasValue = true;
            result.value_ = value;
            return this;
          }
          public Builder SetValue(global::pdp.GpEvent.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasValue = true;
            result.value_ = builderForValue.Build();
            return this;
          }
          public Builder MergeValue(global::pdp.GpEvent value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasValue &&
                result.value_ != global::pdp.GpEvent.DefaultInstance) {
                result.value_ = global::pdp.GpEvent.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
            } else {
              result.value_ = value;
            }
            result.hasValue = true;
            return this;
          }
          public Builder ClearValue() {
            PrepareBuilder();
            result.hasValue = false;
            result.value_ = null;
            return this;
          }
        }
        static GpDataEventMapEntry() {
          object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int MapEntryFieldNumber = 1;
    private pbc::PopsicleList<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry> mapEntry_ = new pbc::PopsicleList<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry>();
    public scg::IList<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry> MapEntryList {
      get { return mapEntry_; }
    }
    public int MapEntryCount {
      get { return mapEntry_.Count; }
    }
    public global::pdp.GpDataEventMap.Types.GpDataEventMapEntry GetMapEntry(int index) {
      return mapEntry_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::pdp.GpDataEventMap.Types.GpDataEventMapEntry element in MapEntryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpDataEventMapFieldNames;
      if (mapEntry_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], mapEntry_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::pdp.GpDataEventMap.Types.GpDataEventMapEntry element in MapEntryList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpDataEventMap ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpDataEventMap ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpDataEventMap ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpDataEventMap ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpDataEventMap MakeReadOnly() {
      mapEntry_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpDataEventMap prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpDataEventMap, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpDataEventMap cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpDataEventMap result;
      
      private GpDataEventMap PrepareBuilder() {
        if (resultIsReadOnly) {
          GpDataEventMap original = result;
          result = new GpDataEventMap();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpDataEventMap MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpDataEventMap.Descriptor; }
      }
      
      public override GpDataEventMap DefaultInstanceForType {
        get { return global::pdp.GpDataEventMap.DefaultInstance; }
      }
      
      public override GpDataEventMap BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpDataEventMap) {
          return MergeFrom((GpDataEventMap) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpDataEventMap other) {
        if (other == global::pdp.GpDataEventMap.DefaultInstance) return this;
        PrepareBuilder();
        if (other.mapEntry_.Count != 0) {
          result.mapEntry_.Add(other.mapEntry_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpDataEventMapFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpDataEventMapFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.mapEntry_, global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry> MapEntryList {
        get { return PrepareBuilder().mapEntry_; }
      }
      public int MapEntryCount {
        get { return result.MapEntryCount; }
      }
      public global::pdp.GpDataEventMap.Types.GpDataEventMapEntry GetMapEntry(int index) {
        return result.GetMapEntry(index);
      }
      public Builder SetMapEntry(int index, global::pdp.GpDataEventMap.Types.GpDataEventMapEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mapEntry_[index] = value;
        return this;
      }
      public Builder SetMapEntry(int index, global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mapEntry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMapEntry(global::pdp.GpDataEventMap.Types.GpDataEventMapEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mapEntry_.Add(value);
        return this;
      }
      public Builder AddMapEntry(global::pdp.GpDataEventMap.Types.GpDataEventMapEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mapEntry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMapEntry(scg::IEnumerable<global::pdp.GpDataEventMap.Types.GpDataEventMapEntry> values) {
        PrepareBuilder();
        result.mapEntry_.Add(values);
        return this;
      }
      public Builder ClearMapEntry() {
        PrepareBuilder();
        result.mapEntry_.Clear();
        return this;
      }
    }
    static GpDataEventMap() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpStateEventMap : pb::GeneratedMessage<GpStateEventMap, GpStateEventMap.Builder> {
    private GpStateEventMap() { }
    private static readonly GpStateEventMap defaultInstance = new GpStateEventMap().MakeReadOnly();
    private static readonly string[] _gpStateEventMapFieldNames = new string[] { "mapEntry" };
    private static readonly uint[] _gpStateEventMapFieldTags = new uint[] { 10 };
    public static GpStateEventMap DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpStateEventMap DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpStateEventMap ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpStateEventMap__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpStateEventMap, GpStateEventMap.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpStateEventMap__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class GpStateEventMapEntry : pb::GeneratedMessage<GpStateEventMapEntry, GpStateEventMapEntry.Builder> {
        private GpStateEventMapEntry() { }
        private static readonly GpStateEventMapEntry defaultInstance = new GpStateEventMapEntry().MakeReadOnly();
        private static readonly string[] _gpStateEventMapEntryFieldNames = new string[] { "key", "value" };
        private static readonly uint[] _gpStateEventMapEntryFieldTags = new uint[] { 10, 18 };
        public static GpStateEventMapEntry DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override GpStateEventMapEntry DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override GpStateEventMapEntry ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::pdp.PdpProtos.internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<GpStateEventMapEntry, GpStateEventMapEntry.Builder> InternalFieldAccessors {
          get { return global::pdp.PdpProtos.internal__static_pdp_GpStateEventMap_GpStateEventMapEntry__FieldAccessorTable; }
        }
        
        public const int KeyFieldNumber = 1;
        private bool hasKey;
        private string key_ = "";
        public bool HasKey {
          get { return hasKey; }
        }
        public string Key {
          get { return key_; }
        }
        
        public const int ValueFieldNumber = 2;
        private bool hasValue;
        private global::pdp.GpEvent value_;
        public bool HasValue {
          get { return hasValue; }
        }
        public global::pdp.GpEvent Value {
          get { return value_ ?? global::pdp.GpEvent.DefaultInstance; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasKey) return false;
            if (!hasValue) return false;
            if (!Value.IsInitialized) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _gpStateEventMapEntryFieldNames;
          if (hasKey) {
            output.WriteString(1, field_names[0], Key);
          }
          if (hasValue) {
            output.WriteMessage(2, field_names[1], Value);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasKey) {
              size += pb::CodedOutputStream.ComputeStringSize(1, Key);
            }
            if (hasValue) {
              size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static GpStateEventMapEntry ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static GpStateEventMapEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GpStateEventMapEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private GpStateEventMapEntry MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(GpStateEventMapEntry prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<GpStateEventMapEntry, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(GpStateEventMapEntry cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private GpStateEventMapEntry result;
          
          private GpStateEventMapEntry PrepareBuilder() {
            if (resultIsReadOnly) {
              GpStateEventMapEntry original = result;
              result = new GpStateEventMapEntry();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override GpStateEventMapEntry MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.Descriptor; }
          }
          
          public override GpStateEventMapEntry DefaultInstanceForType {
            get { return global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.DefaultInstance; }
          }
          
          public override GpStateEventMapEntry BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is GpStateEventMapEntry) {
              return MergeFrom((GpStateEventMapEntry) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(GpStateEventMapEntry other) {
            if (other == global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasKey) {
              Key = other.Key;
            }
            if (other.HasValue) {
              MergeValue(other.Value);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_gpStateEventMapEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _gpStateEventMapEntryFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasKey = input.ReadString(ref result.key_);
                  break;
                }
                case 18: {
                  global::pdp.GpEvent.Builder subBuilder = global::pdp.GpEvent.CreateBuilder();
                  if (result.hasValue) {
                    subBuilder.MergeFrom(Value);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Value = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasKey {
            get { return result.hasKey; }
          }
          public string Key {
            get { return result.Key; }
            set { SetKey(value); }
          }
          public Builder SetKey(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasKey = true;
            result.key_ = value;
            return this;
          }
          public Builder ClearKey() {
            PrepareBuilder();
            result.hasKey = false;
            result.key_ = "";
            return this;
          }
          
          public bool HasValue {
           get { return result.hasValue; }
          }
          public global::pdp.GpEvent Value {
            get { return result.Value; }
            set { SetValue(value); }
          }
          public Builder SetValue(global::pdp.GpEvent value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasValue = true;
            result.value_ = value;
            return this;
          }
          public Builder SetValue(global::pdp.GpEvent.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasValue = true;
            result.value_ = builderForValue.Build();
            return this;
          }
          public Builder MergeValue(global::pdp.GpEvent value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasValue &&
                result.value_ != global::pdp.GpEvent.DefaultInstance) {
                result.value_ = global::pdp.GpEvent.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
            } else {
              result.value_ = value;
            }
            result.hasValue = true;
            return this;
          }
          public Builder ClearValue() {
            PrepareBuilder();
            result.hasValue = false;
            result.value_ = null;
            return this;
          }
        }
        static GpStateEventMapEntry() {
          object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int MapEntryFieldNumber = 1;
    private pbc::PopsicleList<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry> mapEntry_ = new pbc::PopsicleList<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry>();
    public scg::IList<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry> MapEntryList {
      get { return mapEntry_; }
    }
    public int MapEntryCount {
      get { return mapEntry_.Count; }
    }
    public global::pdp.GpStateEventMap.Types.GpStateEventMapEntry GetMapEntry(int index) {
      return mapEntry_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::pdp.GpStateEventMap.Types.GpStateEventMapEntry element in MapEntryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpStateEventMapFieldNames;
      if (mapEntry_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], mapEntry_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::pdp.GpStateEventMap.Types.GpStateEventMapEntry element in MapEntryList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpStateEventMap ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpStateEventMap ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpStateEventMap ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpStateEventMap ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpStateEventMap MakeReadOnly() {
      mapEntry_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpStateEventMap prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpStateEventMap, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpStateEventMap cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpStateEventMap result;
      
      private GpStateEventMap PrepareBuilder() {
        if (resultIsReadOnly) {
          GpStateEventMap original = result;
          result = new GpStateEventMap();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpStateEventMap MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpStateEventMap.Descriptor; }
      }
      
      public override GpStateEventMap DefaultInstanceForType {
        get { return global::pdp.GpStateEventMap.DefaultInstance; }
      }
      
      public override GpStateEventMap BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpStateEventMap) {
          return MergeFrom((GpStateEventMap) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpStateEventMap other) {
        if (other == global::pdp.GpStateEventMap.DefaultInstance) return this;
        PrepareBuilder();
        if (other.mapEntry_.Count != 0) {
          result.mapEntry_.Add(other.mapEntry_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpStateEventMapFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpStateEventMapFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.mapEntry_, global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry> MapEntryList {
        get { return PrepareBuilder().mapEntry_; }
      }
      public int MapEntryCount {
        get { return result.MapEntryCount; }
      }
      public global::pdp.GpStateEventMap.Types.GpStateEventMapEntry GetMapEntry(int index) {
        return result.GetMapEntry(index);
      }
      public Builder SetMapEntry(int index, global::pdp.GpStateEventMap.Types.GpStateEventMapEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mapEntry_[index] = value;
        return this;
      }
      public Builder SetMapEntry(int index, global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mapEntry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMapEntry(global::pdp.GpStateEventMap.Types.GpStateEventMapEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mapEntry_.Add(value);
        return this;
      }
      public Builder AddMapEntry(global::pdp.GpStateEventMap.Types.GpStateEventMapEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mapEntry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMapEntry(scg::IEnumerable<global::pdp.GpStateEventMap.Types.GpStateEventMapEntry> values) {
        PrepareBuilder();
        result.mapEntry_.Add(values);
        return this;
      }
      public Builder ClearMapEntry() {
        PrepareBuilder();
        result.mapEntry_.Clear();
        return this;
      }
    }
    static GpStateEventMap() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpSimplifiedTemporalLogic : pb::GeneratedMessage<GpSimplifiedTemporalLogic, GpSimplifiedTemporalLogic.Builder> {
    private GpSimplifiedTemporalLogic() { }
    private static readonly GpSimplifiedTemporalLogic defaultInstance = new GpSimplifiedTemporalLogic().MakeReadOnly();
    private static readonly string[] _gpSimplifiedTemporalLogicFieldNames = new string[] { "dataEventMap", "formula", "stateEventMap" };
    private static readonly uint[] _gpSimplifiedTemporalLogicFieldTags = new uint[] { 10, 18, 26 };
    public static GpSimplifiedTemporalLogic DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpSimplifiedTemporalLogic DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpSimplifiedTemporalLogic ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpSimplifiedTemporalLogic__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpSimplifiedTemporalLogic, GpSimplifiedTemporalLogic.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpSimplifiedTemporalLogic__FieldAccessorTable; }
    }
    
    public const int DataEventMapFieldNumber = 1;
    private bool hasDataEventMap;
    private global::pdp.GpDataEventMap dataEventMap_;
    public bool HasDataEventMap {
      get { return hasDataEventMap; }
    }
    public global::pdp.GpDataEventMap DataEventMap {
      get { return dataEventMap_ ?? global::pdp.GpDataEventMap.DefaultInstance; }
    }
    
    public const int FormulaFieldNumber = 2;
    private bool hasFormula;
    private global::pdp.GpOslFormula formula_;
    public bool HasFormula {
      get { return hasFormula; }
    }
    public global::pdp.GpOslFormula Formula {
      get { return formula_ ?? global::pdp.GpOslFormula.DefaultInstance; }
    }
    
    public const int StateEventMapFieldNumber = 3;
    private bool hasStateEventMap;
    private global::pdp.GpStateEventMap stateEventMap_;
    public bool HasStateEventMap {
      get { return hasStateEventMap; }
    }
    public global::pdp.GpStateEventMap StateEventMap {
      get { return stateEventMap_ ?? global::pdp.GpStateEventMap.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasDataEventMap) {
          if (!DataEventMap.IsInitialized) return false;
        }
        if (HasStateEventMap) {
          if (!StateEventMap.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpSimplifiedTemporalLogicFieldNames;
      if (hasDataEventMap) {
        output.WriteMessage(1, field_names[0], DataEventMap);
      }
      if (hasFormula) {
        output.WriteMessage(2, field_names[1], Formula);
      }
      if (hasStateEventMap) {
        output.WriteMessage(3, field_names[2], StateEventMap);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataEventMap) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, DataEventMap);
        }
        if (hasFormula) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Formula);
        }
        if (hasStateEventMap) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, StateEventMap);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpSimplifiedTemporalLogic ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpSimplifiedTemporalLogic ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpSimplifiedTemporalLogic MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpSimplifiedTemporalLogic prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpSimplifiedTemporalLogic, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpSimplifiedTemporalLogic cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpSimplifiedTemporalLogic result;
      
      private GpSimplifiedTemporalLogic PrepareBuilder() {
        if (resultIsReadOnly) {
          GpSimplifiedTemporalLogic original = result;
          result = new GpSimplifiedTemporalLogic();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpSimplifiedTemporalLogic MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpSimplifiedTemporalLogic.Descriptor; }
      }
      
      public override GpSimplifiedTemporalLogic DefaultInstanceForType {
        get { return global::pdp.GpSimplifiedTemporalLogic.DefaultInstance; }
      }
      
      public override GpSimplifiedTemporalLogic BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpSimplifiedTemporalLogic) {
          return MergeFrom((GpSimplifiedTemporalLogic) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpSimplifiedTemporalLogic other) {
        if (other == global::pdp.GpSimplifiedTemporalLogic.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataEventMap) {
          MergeDataEventMap(other.DataEventMap);
        }
        if (other.HasFormula) {
          MergeFormula(other.Formula);
        }
        if (other.HasStateEventMap) {
          MergeStateEventMap(other.StateEventMap);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpSimplifiedTemporalLogicFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpSimplifiedTemporalLogicFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pdp.GpDataEventMap.Builder subBuilder = global::pdp.GpDataEventMap.CreateBuilder();
              if (result.hasDataEventMap) {
                subBuilder.MergeFrom(DataEventMap);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DataEventMap = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::pdp.GpOslFormula.Builder subBuilder = global::pdp.GpOslFormula.CreateBuilder();
              if (result.hasFormula) {
                subBuilder.MergeFrom(Formula);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Formula = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::pdp.GpStateEventMap.Builder subBuilder = global::pdp.GpStateEventMap.CreateBuilder();
              if (result.hasStateEventMap) {
                subBuilder.MergeFrom(StateEventMap);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StateEventMap = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataEventMap {
       get { return result.hasDataEventMap; }
      }
      public global::pdp.GpDataEventMap DataEventMap {
        get { return result.DataEventMap; }
        set { SetDataEventMap(value); }
      }
      public Builder SetDataEventMap(global::pdp.GpDataEventMap value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDataEventMap = true;
        result.dataEventMap_ = value;
        return this;
      }
      public Builder SetDataEventMap(global::pdp.GpDataEventMap.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDataEventMap = true;
        result.dataEventMap_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDataEventMap(global::pdp.GpDataEventMap value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDataEventMap &&
            result.dataEventMap_ != global::pdp.GpDataEventMap.DefaultInstance) {
            result.dataEventMap_ = global::pdp.GpDataEventMap.CreateBuilder(result.dataEventMap_).MergeFrom(value).BuildPartial();
        } else {
          result.dataEventMap_ = value;
        }
        result.hasDataEventMap = true;
        return this;
      }
      public Builder ClearDataEventMap() {
        PrepareBuilder();
        result.hasDataEventMap = false;
        result.dataEventMap_ = null;
        return this;
      }
      
      public bool HasFormula {
       get { return result.hasFormula; }
      }
      public global::pdp.GpOslFormula Formula {
        get { return result.Formula; }
        set { SetFormula(value); }
      }
      public Builder SetFormula(global::pdp.GpOslFormula value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFormula = true;
        result.formula_ = value;
        return this;
      }
      public Builder SetFormula(global::pdp.GpOslFormula.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFormula = true;
        result.formula_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFormula(global::pdp.GpOslFormula value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFormula &&
            result.formula_ != global::pdp.GpOslFormula.DefaultInstance) {
            result.formula_ = global::pdp.GpOslFormula.CreateBuilder(result.formula_).MergeFrom(value).BuildPartial();
        } else {
          result.formula_ = value;
        }
        result.hasFormula = true;
        return this;
      }
      public Builder ClearFormula() {
        PrepareBuilder();
        result.hasFormula = false;
        result.formula_ = null;
        return this;
      }
      
      public bool HasStateEventMap {
       get { return result.hasStateEventMap; }
      }
      public global::pdp.GpStateEventMap StateEventMap {
        get { return result.StateEventMap; }
        set { SetStateEventMap(value); }
      }
      public Builder SetStateEventMap(global::pdp.GpStateEventMap value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStateEventMap = true;
        result.stateEventMap_ = value;
        return this;
      }
      public Builder SetStateEventMap(global::pdp.GpStateEventMap.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStateEventMap = true;
        result.stateEventMap_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStateEventMap(global::pdp.GpStateEventMap value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStateEventMap &&
            result.stateEventMap_ != global::pdp.GpStateEventMap.DefaultInstance) {
            result.stateEventMap_ = global::pdp.GpStateEventMap.CreateBuilder(result.stateEventMap_).MergeFrom(value).BuildPartial();
        } else {
          result.stateEventMap_ = value;
        }
        result.hasStateEventMap = true;
        return this;
      }
      public Builder ClearStateEventMap() {
        PrepareBuilder();
        result.hasStateEventMap = false;
        result.stateEventMap_ = null;
        return this;
      }
    }
    static GpSimplifiedTemporalLogic() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpCondition : pb::GeneratedMessage<GpCondition, GpCondition.Builder> {
    private GpCondition() { }
    private static readonly GpCondition defaultInstance = new GpCondition().MakeReadOnly();
    private static readonly string[] _gpConditionFieldNames = new string[] { "condition", "conditionSimp" };
    private static readonly uint[] _gpConditionFieldTags = new uint[] { 10, 18 };
    public static GpCondition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpCondition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpCondition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpCondition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpCondition, GpCondition.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpCondition__FieldAccessorTable; }
    }
    
    public const int ConditionFieldNumber = 1;
    private bool hasCondition;
    private global::pdp.GpOslFormula condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::pdp.GpOslFormula Condition {
      get { return condition_ ?? global::pdp.GpOslFormula.DefaultInstance; }
    }
    
    public const int ConditionSimpFieldNumber = 2;
    private bool hasConditionSimp;
    private global::pdp.GpSimplifiedTemporalLogic conditionSimp_;
    public bool HasConditionSimp {
      get { return hasConditionSimp; }
    }
    public global::pdp.GpSimplifiedTemporalLogic ConditionSimp {
      get { return conditionSimp_ ?? global::pdp.GpSimplifiedTemporalLogic.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasConditionSimp) {
          if (!ConditionSimp.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpConditionFieldNames;
      if (hasCondition) {
        output.WriteMessage(1, field_names[0], Condition);
      }
      if (hasConditionSimp) {
        output.WriteMessage(2, field_names[1], ConditionSimp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Condition);
        }
        if (hasConditionSimp) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ConditionSimp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpCondition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpCondition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpCondition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpCondition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpCondition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpCondition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpCondition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpCondition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpCondition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpCondition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpCondition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpCondition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpCondition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpCondition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpCondition result;
      
      private GpCondition PrepareBuilder() {
        if (resultIsReadOnly) {
          GpCondition original = result;
          result = new GpCondition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpCondition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpCondition.Descriptor; }
      }
      
      public override GpCondition DefaultInstanceForType {
        get { return global::pdp.GpCondition.DefaultInstance; }
      }
      
      public override GpCondition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpCondition) {
          return MergeFrom((GpCondition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpCondition other) {
        if (other == global::pdp.GpCondition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.HasConditionSimp) {
          MergeConditionSimp(other.ConditionSimp);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpConditionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpConditionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pdp.GpOslFormula.Builder subBuilder = global::pdp.GpOslFormula.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::pdp.GpSimplifiedTemporalLogic.Builder subBuilder = global::pdp.GpSimplifiedTemporalLogic.CreateBuilder();
              if (result.hasConditionSimp) {
                subBuilder.MergeFrom(ConditionSimp);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConditionSimp = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::pdp.GpOslFormula Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::pdp.GpOslFormula value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::pdp.GpOslFormula.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::pdp.GpOslFormula value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::pdp.GpOslFormula.DefaultInstance) {
            result.condition_ = global::pdp.GpOslFormula.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public bool HasConditionSimp {
       get { return result.hasConditionSimp; }
      }
      public global::pdp.GpSimplifiedTemporalLogic ConditionSimp {
        get { return result.ConditionSimp; }
        set { SetConditionSimp(value); }
      }
      public Builder SetConditionSimp(global::pdp.GpSimplifiedTemporalLogic value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConditionSimp = true;
        result.conditionSimp_ = value;
        return this;
      }
      public Builder SetConditionSimp(global::pdp.GpSimplifiedTemporalLogic.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConditionSimp = true;
        result.conditionSimp_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConditionSimp(global::pdp.GpSimplifiedTemporalLogic value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConditionSimp &&
            result.conditionSimp_ != global::pdp.GpSimplifiedTemporalLogic.DefaultInstance) {
            result.conditionSimp_ = global::pdp.GpSimplifiedTemporalLogic.CreateBuilder(result.conditionSimp_).MergeFrom(value).BuildPartial();
        } else {
          result.conditionSimp_ = value;
        }
        result.hasConditionSimp = true;
        return this;
      }
      public Builder ClearConditionSimp() {
        PrepareBuilder();
        result.hasConditionSimp = false;
        result.conditionSimp_ = null;
        return this;
      }
    }
    static GpCondition() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpHistory : pb::GeneratedMessage<GpHistory, GpHistory.Builder> {
    private GpHistory() { }
    private static readonly GpHistory defaultInstance = new GpHistory().MakeReadOnly();
    private static readonly string[] _gpHistoryFieldNames = new string[] { "trace" };
    private static readonly uint[] _gpHistoryFieldTags = new uint[] { 10 };
    public static GpHistory DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpHistory DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpHistory ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpHistory__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpHistory, GpHistory.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpHistory__FieldAccessorTable; }
    }
    
    public const int TraceFieldNumber = 1;
    private pbc::PopsicleList<global::pdp.GpEvent> trace_ = new pbc::PopsicleList<global::pdp.GpEvent>();
    public scg::IList<global::pdp.GpEvent> TraceList {
      get { return trace_; }
    }
    public int TraceCount {
      get { return trace_.Count; }
    }
    public global::pdp.GpEvent GetTrace(int index) {
      return trace_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::pdp.GpEvent element in TraceList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpHistoryFieldNames;
      if (trace_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], trace_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::pdp.GpEvent element in TraceList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpHistory ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpHistory ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpHistory ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpHistory ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpHistory ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpHistory ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpHistory ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpHistory ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpHistory ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpHistory ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpHistory MakeReadOnly() {
      trace_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpHistory prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpHistory, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpHistory cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpHistory result;
      
      private GpHistory PrepareBuilder() {
        if (resultIsReadOnly) {
          GpHistory original = result;
          result = new GpHistory();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpHistory MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpHistory.Descriptor; }
      }
      
      public override GpHistory DefaultInstanceForType {
        get { return global::pdp.GpHistory.DefaultInstance; }
      }
      
      public override GpHistory BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpHistory) {
          return MergeFrom((GpHistory) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpHistory other) {
        if (other == global::pdp.GpHistory.DefaultInstance) return this;
        PrepareBuilder();
        if (other.trace_.Count != 0) {
          result.trace_.Add(other.trace_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpHistoryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpHistoryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.trace_, global::pdp.GpEvent.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pdp.GpEvent> TraceList {
        get { return PrepareBuilder().trace_; }
      }
      public int TraceCount {
        get { return result.TraceCount; }
      }
      public global::pdp.GpEvent GetTrace(int index) {
        return result.GetTrace(index);
      }
      public Builder SetTrace(int index, global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.trace_[index] = value;
        return this;
      }
      public Builder SetTrace(int index, global::pdp.GpEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.trace_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTrace(global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.trace_.Add(value);
        return this;
      }
      public Builder AddTrace(global::pdp.GpEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.trace_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTrace(scg::IEnumerable<global::pdp.GpEvent> values) {
        PrepareBuilder();
        result.trace_.Add(values);
        return this;
      }
      public Builder ClearTrace() {
        PrepareBuilder();
        result.trace_.Clear();
        return this;
      }
    }
    static GpHistory() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpMechanism : pb::GeneratedMessage<GpMechanism, GpMechanism.Builder> {
    private GpMechanism() { }
    private static readonly GpMechanism defaultInstance = new GpMechanism().MakeReadOnly();
    private static readonly string[] _gpMechanismFieldNames = new string[] { "condition", "mechanismName", "response", "state", "triggerEvent" };
    private static readonly uint[] _gpMechanismFieldTags = new uint[] { 10, 18, 26, 34, 42 };
    public static GpMechanism DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpMechanism DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpMechanism ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpMechanism__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpMechanism, GpMechanism.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpMechanism__FieldAccessorTable; }
    }
    
    public const int ConditionFieldNumber = 1;
    private bool hasCondition;
    private global::pdp.GpCondition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::pdp.GpCondition Condition {
      get { return condition_ ?? global::pdp.GpCondition.DefaultInstance; }
    }
    
    public const int MechanismNameFieldNumber = 2;
    private bool hasMechanismName;
    private string mechanismName_ = "";
    public bool HasMechanismName {
      get { return hasMechanismName; }
    }
    public string MechanismName {
      get { return mechanismName_; }
    }
    
    public const int ResponseFieldNumber = 3;
    private bool hasResponse;
    private global::pdp.GpResponse response_;
    public bool HasResponse {
      get { return hasResponse; }
    }
    public global::pdp.GpResponse Response {
      get { return response_ ?? global::pdp.GpResponse.DefaultInstance; }
    }
    
    public const int StateFieldNumber = 4;
    private bool hasState;
    private global::pdp.GpHistory state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::pdp.GpHistory State {
      get { return state_ ?? global::pdp.GpHistory.DefaultInstance; }
    }
    
    public const int TriggerEventFieldNumber = 5;
    private bool hasTriggerEvent;
    private global::pdp.GpEvent triggerEvent_;
    public bool HasTriggerEvent {
      get { return hasTriggerEvent; }
    }
    public global::pdp.GpEvent TriggerEvent {
      get { return triggerEvent_ ?? global::pdp.GpEvent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCondition) {
          if (!Condition.IsInitialized) return false;
        }
        if (HasResponse) {
          if (!Response.IsInitialized) return false;
        }
        if (HasState) {
          if (!State.IsInitialized) return false;
        }
        if (HasTriggerEvent) {
          if (!TriggerEvent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpMechanismFieldNames;
      if (hasCondition) {
        output.WriteMessage(1, field_names[0], Condition);
      }
      if (hasMechanismName) {
        output.WriteString(2, field_names[1], MechanismName);
      }
      if (hasResponse) {
        output.WriteMessage(3, field_names[2], Response);
      }
      if (hasState) {
        output.WriteMessage(4, field_names[3], State);
      }
      if (hasTriggerEvent) {
        output.WriteMessage(5, field_names[4], TriggerEvent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Condition);
        }
        if (hasMechanismName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MechanismName);
        }
        if (hasResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Response);
        }
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, State);
        }
        if (hasTriggerEvent) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, TriggerEvent);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpMechanism ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpMechanism ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpMechanism ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpMechanism ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpMechanism ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpMechanism ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpMechanism ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpMechanism ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpMechanism ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpMechanism ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpMechanism MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpMechanism prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpMechanism, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpMechanism cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpMechanism result;
      
      private GpMechanism PrepareBuilder() {
        if (resultIsReadOnly) {
          GpMechanism original = result;
          result = new GpMechanism();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpMechanism MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpMechanism.Descriptor; }
      }
      
      public override GpMechanism DefaultInstanceForType {
        get { return global::pdp.GpMechanism.DefaultInstance; }
      }
      
      public override GpMechanism BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpMechanism) {
          return MergeFrom((GpMechanism) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpMechanism other) {
        if (other == global::pdp.GpMechanism.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.HasMechanismName) {
          MechanismName = other.MechanismName;
        }
        if (other.HasResponse) {
          MergeResponse(other.Response);
        }
        if (other.HasState) {
          MergeState(other.State);
        }
        if (other.HasTriggerEvent) {
          MergeTriggerEvent(other.TriggerEvent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpMechanismFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpMechanismFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pdp.GpCondition.Builder subBuilder = global::pdp.GpCondition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasMechanismName = input.ReadString(ref result.mechanismName_);
              break;
            }
            case 26: {
              global::pdp.GpResponse.Builder subBuilder = global::pdp.GpResponse.CreateBuilder();
              if (result.hasResponse) {
                subBuilder.MergeFrom(Response);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Response = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::pdp.GpHistory.Builder subBuilder = global::pdp.GpHistory.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::pdp.GpEvent.Builder subBuilder = global::pdp.GpEvent.CreateBuilder();
              if (result.hasTriggerEvent) {
                subBuilder.MergeFrom(TriggerEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TriggerEvent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::pdp.GpCondition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::pdp.GpCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::pdp.GpCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::pdp.GpCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::pdp.GpCondition.DefaultInstance) {
            result.condition_ = global::pdp.GpCondition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public bool HasMechanismName {
        get { return result.hasMechanismName; }
      }
      public string MechanismName {
        get { return result.MechanismName; }
        set { SetMechanismName(value); }
      }
      public Builder SetMechanismName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMechanismName = true;
        result.mechanismName_ = value;
        return this;
      }
      public Builder ClearMechanismName() {
        PrepareBuilder();
        result.hasMechanismName = false;
        result.mechanismName_ = "";
        return this;
      }
      
      public bool HasResponse {
       get { return result.hasResponse; }
      }
      public global::pdp.GpResponse Response {
        get { return result.Response; }
        set { SetResponse(value); }
      }
      public Builder SetResponse(global::pdp.GpResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder SetResponse(global::pdp.GpResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponse = true;
        result.response_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponse(global::pdp.GpResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponse &&
            result.response_ != global::pdp.GpResponse.DefaultInstance) {
            result.response_ = global::pdp.GpResponse.CreateBuilder(result.response_).MergeFrom(value).BuildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder ClearResponse() {
        PrepareBuilder();
        result.hasResponse = false;
        result.response_ = null;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::pdp.GpHistory State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::pdp.GpHistory value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::pdp.GpHistory.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::pdp.GpHistory value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::pdp.GpHistory.DefaultInstance) {
            result.state_ = global::pdp.GpHistory.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
      
      public bool HasTriggerEvent {
       get { return result.hasTriggerEvent; }
      }
      public global::pdp.GpEvent TriggerEvent {
        get { return result.TriggerEvent; }
        set { SetTriggerEvent(value); }
      }
      public Builder SetTriggerEvent(global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTriggerEvent = true;
        result.triggerEvent_ = value;
        return this;
      }
      public Builder SetTriggerEvent(global::pdp.GpEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTriggerEvent = true;
        result.triggerEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTriggerEvent(global::pdp.GpEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTriggerEvent &&
            result.triggerEvent_ != global::pdp.GpEvent.DefaultInstance) {
            result.triggerEvent_ = global::pdp.GpEvent.CreateBuilder(result.triggerEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.triggerEvent_ = value;
        }
        result.hasTriggerEvent = true;
        return this;
      }
      public Builder ClearTriggerEvent() {
        PrepareBuilder();
        result.hasTriggerEvent = false;
        result.triggerEvent_ = null;
        return this;
      }
    }
    static GpMechanism() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpConflictResolutionFlag : pb::GeneratedMessage<GpConflictResolutionFlag, GpConflictResolutionFlag.Builder> {
    private GpConflictResolutionFlag() { }
    private static readonly GpConflictResolutionFlag defaultInstance = new GpConflictResolutionFlag().MakeReadOnly();
    private static readonly string[] _gpConflictResolutionFlagFieldNames = new string[] { "value" };
    private static readonly uint[] _gpConflictResolutionFlagFieldTags = new uint[] { 8 };
    public static GpConflictResolutionFlag DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpConflictResolutionFlag DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpConflictResolutionFlag ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpConflictResolutionFlag__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpConflictResolutionFlag, GpConflictResolutionFlag.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpConflictResolutionFlag__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum GpEConflictResolution {
        OVERWRITE = 1,
        IGNORE_UPDATES = 2,
        KEEP_ALL = 3,
      }
      
    }
    #endregion
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private global::pdp.GpConflictResolutionFlag.Types.GpEConflictResolution value_ = global::pdp.GpConflictResolutionFlag.Types.GpEConflictResolution.OVERWRITE;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::pdp.GpConflictResolutionFlag.Types.GpEConflictResolution Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpConflictResolutionFlagFieldNames;
      if (hasValue) {
        output.WriteEnum(1, field_names[0], (int) Value, Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpConflictResolutionFlag ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpConflictResolutionFlag ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpConflictResolutionFlag MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpConflictResolutionFlag prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpConflictResolutionFlag, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpConflictResolutionFlag cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpConflictResolutionFlag result;
      
      private GpConflictResolutionFlag PrepareBuilder() {
        if (resultIsReadOnly) {
          GpConflictResolutionFlag original = result;
          result = new GpConflictResolutionFlag();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpConflictResolutionFlag MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpConflictResolutionFlag.Descriptor; }
      }
      
      public override GpConflictResolutionFlag DefaultInstanceForType {
        get { return global::pdp.GpConflictResolutionFlag.DefaultInstance; }
      }
      
      public override GpConflictResolutionFlag BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpConflictResolutionFlag) {
          return MergeFrom((GpConflictResolutionFlag) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpConflictResolutionFlag other) {
        if (other == global::pdp.GpConflictResolutionFlag.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpConflictResolutionFlagFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpConflictResolutionFlagFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.value_, out unknown)) {
                result.hasValue = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::pdp.GpConflictResolutionFlag.Types.GpEConflictResolution Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::pdp.GpConflictResolutionFlag.Types.GpEConflictResolution value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = global::pdp.GpConflictResolutionFlag.Types.GpEConflictResolution.OVERWRITE;
        return this;
      }
    }
    static GpConflictResolutionFlag() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpPipDeployer : pb::GeneratedMessage<GpPipDeployer, GpPipDeployer.Builder> {
    private GpPipDeployer() { }
    private static readonly GpPipDeployer defaultInstance = new GpPipDeployer().MakeReadOnly();
    private static readonly string[] _gpPipDeployerFieldNames = new string[] { "id", "name" };
    private static readonly uint[] _gpPipDeployerFieldTags = new uint[] { 10, 18 };
    public static GpPipDeployer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpPipDeployer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpPipDeployer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpPipDeployer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpPipDeployer, GpPipDeployer.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpPipDeployer__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpPipDeployerFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasName) {
        output.WriteString(2, field_names[1], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpPipDeployer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpPipDeployer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpPipDeployer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpPipDeployer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpPipDeployer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpPipDeployer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpPipDeployer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpPipDeployer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpPipDeployer result;
      
      private GpPipDeployer PrepareBuilder() {
        if (resultIsReadOnly) {
          GpPipDeployer original = result;
          result = new GpPipDeployer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpPipDeployer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpPipDeployer.Descriptor; }
      }
      
      public override GpPipDeployer DefaultInstanceForType {
        get { return global::pdp.GpPipDeployer.DefaultInstance; }
      }
      
      public override GpPipDeployer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpPipDeployer) {
          return MergeFrom((GpPipDeployer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpPipDeployer other) {
        if (other == global::pdp.GpPipDeployer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpPipDeployerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpPipDeployerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
    }
    static GpPipDeployer() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GpByteArray : pb::GeneratedMessage<GpByteArray, GpByteArray.Builder> {
    private GpByteArray() { }
    private static readonly GpByteArray defaultInstance = new GpByteArray().MakeReadOnly();
    private static readonly string[] _gpByteArrayFieldNames = new string[] { "byteArray" };
    private static readonly uint[] _gpByteArrayFieldTags = new uint[] { 10 };
    public static GpByteArray DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GpByteArray DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GpByteArray ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpByteArray__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GpByteArray, GpByteArray.Builder> InternalFieldAccessors {
      get { return global::pdp.PdpProtos.internal__static_pdp_GpByteArray__FieldAccessorTable; }
    }
    
    public const int ByteArrayFieldNumber = 1;
    private bool hasByteArray;
    private pb::ByteString byteArray_ = pb::ByteString.Empty;
    public bool HasByteArray {
      get { return hasByteArray; }
    }
    public pb::ByteString ByteArray {
      get { return byteArray_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasByteArray) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpByteArrayFieldNames;
      if (hasByteArray) {
        output.WriteBytes(1, field_names[0], ByteArray);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasByteArray) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, ByteArray);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GpByteArray ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpByteArray ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpByteArray ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GpByteArray ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GpByteArray ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpByteArray ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GpByteArray ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GpByteArray ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GpByteArray ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GpByteArray ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GpByteArray MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GpByteArray prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GpByteArray, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GpByteArray cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GpByteArray result;
      
      private GpByteArray PrepareBuilder() {
        if (resultIsReadOnly) {
          GpByteArray original = result;
          result = new GpByteArray();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GpByteArray MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pdp.GpByteArray.Descriptor; }
      }
      
      public override GpByteArray DefaultInstanceForType {
        get { return global::pdp.GpByteArray.DefaultInstance; }
      }
      
      public override GpByteArray BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GpByteArray) {
          return MergeFrom((GpByteArray) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GpByteArray other) {
        if (other == global::pdp.GpByteArray.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasByteArray) {
          ByteArray = other.ByteArray;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpByteArrayFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpByteArrayFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasByteArray = input.ReadBytes(ref result.byteArray_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasByteArray {
        get { return result.hasByteArray; }
      }
      public pb::ByteString ByteArray {
        get { return result.ByteArray; }
        set { SetByteArray(value); }
      }
      public Builder SetByteArray(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasByteArray = true;
        result.byteArray_ = value;
        return this;
      }
      public Builder ClearByteArray() {
        PrepareBuilder();
        result.hasByteArray = false;
        result.byteArray_ = pb::ByteString.Empty;
        return this;
      }
    }
    static GpByteArray() {
      object.ReferenceEquals(global::pdp.PdpProtos.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code

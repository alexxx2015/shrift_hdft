<?xml version='1.0' standalone='yes' ?>
<policy xmlns="http://www.iese.fhg.de/pef/1.0/enforcementLanguage" 
        xmlns:tns="http://www.iese.fhg.de/pef/1.0/enforcementLanguage"
        xmlns:a="http://www.iese.fhg.de/pef/1.0/action" 
        xmlns:e="http://www.iese.fhg.de/pef/1.0/event" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           
        name="testPolicy">
        
  <preventiveMechanism name="testPxp">
    <description>...</description>
    <timestep amount="10" unit="SECONDS" />
    <trigger action="t" tryEvent="true">
      <paramMatch name="name1" value="value1" />
    </trigger>  
    <condition><true/>
    </condition>
    <authorizationAction name="default" start="true" fallback="fallback">
      <allow>
    	<executeSyncAction name="myfunc1" processor="pxp" id="myPxp1">
      		<a:parameter name="OLDERTHAN" value="3" />
      		<a:parameter name="UNIT" value="seconds" />
    	</executeSyncAction>
    </allow>
    </authorizationAction>
   	<executeAsyncAction name="myfunc2" processor="pxp" id="myPxp2">
  		<a:parameter name="OLDERTHAN" value="3" />
   		<a:parameter name="UNIT" value="seconds" />
   	</executeAsyncAction>
  </preventiveMechanism>        
<!-- 
  <preventiveMechanism name="testTUM">
    <description>...</description>
    <timestep amount="10" unit="SECONDS" />
    <trigger action="testEvent" tryEvent="true">
      <paramMatch name="name1" value="value1" />
      <paramMatch name="name2" value="value2" />
    </trigger>
    <condition>
      <or>
        <and>
          <not>
            <false />
          </not>
          <before amount="20" unit="SECONDS">
            <true />
          </before>
        </and>
        <implies>
          <within amount="30" unit="SECONDS">
            <false />
          </within>
          <during amount="15" unit="SECONDS">
            <eventMatch action="testEvent" tryEvent="false">
              <paramMatch name="param1" value="value1"/>
            </eventMatch>
          </during>
        </implies>
      </or>
    </condition>
    <authorizationAction name="default" start="true" fallback="fallback">
      <allow>
        <delay amount="5" unit="MINUTES" />
        <modify>
          <parameter name="name1" value="modified1" />
          <parameter name="name2" value="blub" />
        </modify>        
        <executeSyncAction name="deployPolicy">
          <parameter name="file" value="abc.xml" />
        </executeSyncAction>
      </allow>
    </authorizationAction>
    <authorizationAction name="fallback" fallback="fallback2">
      <allow>
        <modify>
          <parameter name="path" value="dev/null" />
        </modify>
      </allow>
    </authorizationAction>
    <authorizationAction name="fallback2">
      <inhibit />
    </authorizationAction>
    <executeAsyncAction name="log" processor="pep">
      <parameter name="file" value="abc.xml" />
    </executeAsyncAction>
    <executeAsyncAction name="log2" processor="pxp">
      <parameter name="file" value="abc.xml" />
    </executeAsyncAction>
  </preventiveMechanism>
  -->
  <preventiveMechanism name="prev2">
    <description>...</description>
    <timestep amount="10" unit="SECONDS" />
    <trigger action="testEvent" tryEvent="true">
      <paramMatch name="name1" value="value1" />
      <paramMatch name="name2" value="value2" />
    </trigger>  
    <condition>
      <or>
        <and>
          <eval type="XPATH">
            <content>an arbitrary xpath formula</content>
          </eval>
          <eval type="MATH"><content> 3+2=5 </content></eval>
        </and>
        <stateBasedFormula operator="isNotIn" param1="src_java.io.FileInputStream.read()I" param2="val2" param3="val3" />
      </or>
    </condition>
    <authorizationAction name="default" start="true" fallback="fallback">
      <allow>
        <delay amount="5" unit="MINUTES" />
        <modify>
          <parameter name="name1" value="modified2" />
        </modify>
        <executeSyncAction name="blub">
          <a:parameter name="file" value="bla.xml" />
        </executeSyncAction>
      </allow>
    </authorizationAction>
  </preventiveMechanism>
</policy>
